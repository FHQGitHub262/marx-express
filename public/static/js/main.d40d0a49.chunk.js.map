{"version":3,"sources":["context/index.js","components/UserInfo/index.js","pages/Home.js","components/Header/index.js","components/Container/index.js","components/SortTable/index.js","components/Pop/index.js","config.js","lib/fetch.js","components/Form/components/StudentSelector.js","components/Form/components/QuestionSelector.js","components/Form/components/SubjectSelector.js","components/Form/components/PaperSelector.js","components/Form/components/CourseSelector.js","components/Form/components/TeacherSelector.js","components/Form/Form.js","components/Form/schema/Login.js","components/Form/schema/CollegeCreator.js","components/Form/schema/ChapterCreator.js","components/Form/schema/ClassCreator.js","components/Form/schema/CourseCreator.js","components/Form/schema/ExamCreator.js","components/Form/schema/MajorCreator.js","components/Form/schema/PaperCreator.js","components/Form/schema/StudentImporter.js","components/Form/schema/SubjectCreator.js","components/Form/schema/TeacherCreator.js","components/Form/schema/QuestionImporter.js","components/Form/index.js","lib/beforeSubmit.js","components/Card/index.js","pages/educational/Exam.js","components/DataShower/index.js","router/config.js","pages/educational/Teacher.js","pages/educational/Subject.js","pages/educational/Course.js","pages/educational/Student.js","pages/educational/ExamInfo.js","pages/educational/Chapter.js","pages/educational/Question.js","pages/examination/Paper.js","pages/school/College.js","pages/school/Major.js","pages/school/Classes.js","pages/school/Student.js","router/index.js","App.js","index.js"],"names":["React","createContext","props","className","style","verticalAlign","fontSize","size","name","JSON","parse","privilege","Array","length","join","styles","home","display","flexDirection","minHeight","main","flex","alignItems","justifyContent","context","useContext","Context","userInfo","nextProps","extra","undefined","action","onClick","handler","border","background","title","padding","children","useState","selectedRowKeys","setSelectedRowKeys","Boolean","data","loading","setLoading","useEffect","timer","clearInterval","setTimeout","marginBottom","type","disabled","actions","map","index","key","find","item","marginTop","message","rowSelection","onChange","nextSelected","console","log","columns","dataSource","pagination","rowKey","record","id","Pop","state","ModalText","confirmLoading","handleOk","setState","visible","handleCancel","this","onOk","doHide","onCancel","Component","POST","url","fetch","config","body","stringify","cache","credentials","headers","method","mode","redirect","referrer","then","response","ok","notification","error","description","status","statusText","duration","json","GET","encode","TreeNode","StudentSelector","treeData","checkedKeys","value","getData","a","async","stage","treeNode","api","queryPayload","eventKey","checkable","isLeaf","onLoadData","Promise","resolve","dataRef","onCheck","expandedKeys","filter","indexOf","onExpand","autoExpandParent","renderTreeNodes","loadData","QuestionSelector","options","Option","raw","setRaw","res","showSearch","width","placeholder","optionFilterProp","filterOption","input","option","toLowerCase","UserUuid","students","courses","forwardRef","ref","formData","setData","valid","setValid","onSubmit","warn","toString","useImperativeHandle","submit","formName","propsSchema","schema","onValidate","widgets","studentSelector","questionSelector","subjectSelector","SubjectSelector","paperSelector","PaperSelector","courseSelector","CourseSelector","teacherSelector","TeacherSelector","properties","password","format","studentList","teacher","enum","enumNames","startAt","endAt","paperId","range","chapter","forExam","singleNum","default","singleList","rootValue","multiNum","multiList","truefalseNum","truefalseList","Login","Form","login","CollegeCreator","collegeCreator","ChapterCreator","chapterCreator","ClassCreator","classCreator","CourseCreator","courseCreator","ExamCreator","examCreator","MajorCreator","majorCreator","PaperCreator","paperCreator","StudentImporter","studentImporter","SubjectCreator","subjectCreator","TeacherCreator","teacherCreator","QuestionImporter","questionImporter","CollegeCard","xs","sm","md","collegeName","bordered","maxWidth","majorNum","classNum","MajorCard","majorName","SubjectCard","handleCourse","args","handleChapter","setVisible","changePop","init","location","query","pathname","push","beforeSubmit","success","catch","e","onBack","history","goBack","dataIndex","render","text","Date","toLocaleDateString","toLocaleTimeString","filters","onFilter","includes","exact","path","icon","component","Home","routes","Object","keys","resetPassword","uuid","selected","subject","href","Exam","v","college","major","renderRoutes","routesConfig","route","subRoutes","Header","Content","Footer","Sider","SubMenu","loginform","setUserInfo","collapsed","setCollapsed","logined","setLogined","window","active","useHistory","addEventListener","dispatchEvent","Event","collapsible","onCollapse","theme","defaultOpenKeys","defaultSelectedKeys","routeConfig","Item","to","color","position","right","margin","height","textAlign","ReactDOM","update_loginform","update_collegeCreator","update_chapterCreator","update_classCreator","update_courseCreator","update_examCreator","update_majorCreator","update_paperCreator","studentAdder","update_studentAdder","update_studentImporter","update_subjectCreator","update_teacherCreator","update_questionImporter","Provider","document","getElementById"],"mappings":"2cAEeA,G,OAAAA,IAAMC,cAAc,K,kCCEpB,G,OAAA,SAAAC,GACb,OACE,yBAAKC,UAAU,YACb,uBACEC,MAAO,CAAEC,cAAe,SAAUC,SAAU,KAC5CC,KAAML,EAAMK,MAAQ,KAEnBL,EAAMM,MAAQ,gBAEjB,4BAAKN,EAAMM,MAAQ,IACnB,4BACE,+BACGC,KAAKC,MAAMR,EAAMS,WAAa,gBAAiBC,OAC9CH,KAAKC,MAAMR,EAAMS,WAAa,MAAME,OAAS,GAC7C,sBAEHJ,KAAKC,MAAMR,EAAMS,WAAa,MAAMG,KAAK,SChB5CC,EAAS,CACbC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,UAAW,QAEbC,KAAM,CACJC,KAAM,EACNJ,QAAS,OACTK,WAAY,SACZC,eAAgB,WAIL,WAAArB,GACb,IAAMsB,EAAUC,qBAAWC,GAC3B,OACE,yBAAKtB,MAAOW,EAAOC,MACjB,yBAAKZ,MAAOW,EAAOK,MACjB,kBAAC,EAAcI,EAAQG,UAAY,O,2ECnB5B,G,OAAA,SAAAzB,GACb,IAAI0B,EAAS,eACR1B,EADQ,CAEX2B,WACmBC,IAAjB5B,EAAM6B,OACJ,uBAAQC,QAAS9B,EAAM6B,OAAOE,SAAU/B,EAAM6B,OAAOvB,WAErDsB,IAGN,OACE,qCACE1B,MAAO,CACL8B,OAAQ,oCACRC,WAAY,2BAEdC,MAAOlC,EAAMkC,OAAS,SAClBR,MCjBK,G,OAAA,SAAA1B,GACb,OACE,uBACEC,UAAU,YACVC,MAAO,CACLiC,QAAS,KAGVnC,EAAMoC,Y,oCCRE,G,OAAA,SAAApC,GAAU,IAAD,EACsBqC,mBAAS,IAD/B,mBACjBC,EADiB,KACAC,EADA,OAEMF,oBAAUG,QAAQxC,EAAMyC,OAF9B,mBAEjBC,EAFiB,KAERC,EAFQ,KAkBtB,OAfAC,qBAAU,WACR,IAAIC,EAUJ,OATK7C,EAAMyC,MAKTK,cAAcD,GACdF,GAAW,IALXE,EAAQE,YAAW,WACjBJ,GAAW,KACV,KAME,WACLG,cAAcD,MAEf,CAAC7C,EAAMyC,OAER,6BACE,yBAAKvC,MAAO,CAAE8C,aAAc,IAAM/C,UAAU,WAC1C,6BACE,uBACEgD,KAAK,UACLnB,QAAS,WACPS,EAAmB,KAErBW,SAAwC,IAA9BX,EAAmB5B,OAC7B+B,QAASA,GANX,6BAUE1C,EAAMmD,SAAW,IAAIC,KAAI,SAACvB,EAAQwB,GAAT,OACzB,uBACEX,QAASA,EACTZ,QAAS,kBACPD,EAAOE,QACLO,EAAgBc,KAAI,SAAAE,GAAG,OACrBtD,EAAMyC,KAAKc,MAAK,SAAAC,GAAI,OAAIA,EAAKF,MAAQA,UAI3CA,IAAKD,GAEJxB,EAAOK,WAKbI,EAAgB3B,OAAS,GACxB,uBACET,MAAO,CAAEuD,UAAW,IACpBC,QAAO,kCAASpB,EAAgB3B,OAAzB,UACPsC,KAAK,OACLhD,UAAU,kBAIhB,uBACEyC,QAASA,EACTiB,aAAc,CACZrB,kBACAsB,SAAU,SAAAC,GACRC,QAAQC,IAAI,4BAA6BF,GACzCtB,EAAmBsB,KAGvBG,QAAShE,EAAMgE,SAAW,GAC1BC,WAAYjE,EAAMyC,MAAQ,GAC1ByB,YAAY,EACZC,OAAQ,SAAAC,GAAM,OAAIA,EAAOC,S,0DCvEZC,E,2MACnBC,MAAQ,CACNC,UAAW,uBACXC,gBAAgB,G,EAGlBC,SAAW,WACT,EAAKC,SAAS,CACZF,gBAAgB,IAElB1B,YAAW,WACT,EAAK4B,SAAS,CACZC,SAAS,EACTH,gBAAgB,MAEjB,M,EAGLI,aAAe,WACbf,QAAQC,IAAI,yBACZ,EAAKY,SAAS,CACZC,SAAS,K,wEAIH,IACAH,EAAmBK,KAAKP,MAAxBE,eACR,OACE,6BACE,uBACEvC,MAAM,iCACN0C,QAASE,KAAK9E,MAAM4E,QACpBG,KAAMD,KAAK9E,MAAM0E,UAAYI,KAAK9E,MAAMgF,OACxCP,eAAgBA,EAChBQ,SAAUH,KAAK9E,MAAMgF,QAAUF,KAAKD,cAEnCC,KAAK9E,MAAMoC,e,GApCWtC,IAAMoF,W,qDCHxB,EACN,6BCGIC,EAAO,SAASC,GAAiB,IAAZ3C,EAAW,uDAAJ,GAEvC,OAAO4C,MAAMC,EAAgBF,EAAK,CAChCG,KAAMhF,KAAKiF,UAAU/C,GACrBgD,MAAO,WACPC,YAAa,UACbC,QAAS,CACP,eAAgB,oBAGlBC,OAAQ,OACRC,KAAM,OACNC,SAAU,SACVC,SAAU,gBACTC,MAAK,SAASC,GAQf,OAPKA,EAASC,IACZC,EAAA,EAAaC,MAAM,CACjB1C,QAAQ,4BAAD,OAAU0B,EAAV,iBACPiB,YAAY,GAAD,OAAKJ,EAASK,OAAd,aAAyBL,EAASM,YAC7CC,SAAU,IAGPP,EAASQ,WAIPC,EAAM,SAAStB,GAAiB,IAAZ3C,EAAW,uDAAJ,GAEtC,OAAO4C,MAAMC,EAAgBF,EAAM,IAAMuB,iBAAOlE,GAAO,CACrDgD,MAAO,WACPC,YAAa,UACbC,QAAS,CACP,aAAc,0BACd,eAAgB,qCAElBC,OAAQ,MACRC,KAAM,OACNC,SAAU,SACVC,SAAU,gBACTC,MAAK,SAASC,GAQf,OAPKA,EAASC,IACZC,EAAA,EAAaC,MAAM,CACjB1C,QAAQ,4BAAD,OAAU0B,EAAV,iBACPiB,YAAY,GAAD,OAAKJ,EAASK,OAAd,aAAyBL,EAASM,YAC7CC,SAAU,IAGPP,EAASQ,WC7CZG,E,IAAAA,SAEaC,E,YAgCnB,WAAY7G,GAAQ,IAAD,8BACjB,4CAAMA,KAhCRuE,MAAQ,CACNuC,SAAU,GACVC,YAAa,GACbC,MAAO,IA4BU,EAzBnBC,QAAU,gDAAAC,EAAAC,OAAA,uDACRC,EADQ,+BACA,EACRC,EAFQ,+BAEG,CACTrH,MAAO,IAIHsH,EAAM,CACV,mBACA,iBACA,kBACA,qBALEC,EAAe,IAONlD,GAAKgD,EAASrH,MAAMwH,SAbzB,WAAAN,EAAA,MAceR,EAAIY,EAAIF,GAAQG,IAd/B,uBAcA9E,EAdA,EAcAA,KACRqB,QAAQC,IAAIqD,EAAiB,IAAVA,GAfX,kBAgBD3E,EAAKW,KAAI,SAAAI,GAAI,MAAK,CACvBtB,MAAOsB,EAAKlD,KACZgD,IAAKE,EAAKa,GACVoD,UAAqB,IAAVL,EACXA,MAAOA,EAAQ,EACfM,OAAkB,IAAVN,OArBF,uCAyBS,EAUnBO,WAAa,SAAMN,GAAN,SAAAH,EAAAC,OAAA,yEACX,IAAIS,SAAQ,SAAAC,GACNR,EAASrH,MAAMoC,SACjByF,IAGF,EAAKZ,QAAQI,EAASrH,MAAMoH,MAAOC,GAAUrB,MAAK,SAAA5D,GAChDiF,EAASrH,MAAM8H,QAAQ1F,SAAWA,EAClC0B,QAAQC,IAAIsD,GACZ,EAAK1C,SAAS,CACZmC,SAAS,YAAK,EAAKvC,MAAMuC,YAE3Be,WAZO,sCAVM,EA0BnBE,QAAU,SAAAhB,GACRjD,QAAQC,IAAI,UAAWgD,EAAa,EAAKxC,MAAMyD,cAE/C,EAAKrD,SACH,CACEoC,cACAC,MAAOD,EAAYkB,QACjB,SAAAzE,GAAI,OAAI,EAAKe,MAAMyD,aAAaE,QAAQ1E,GAAQ,OAGpD,YACG,EAAKxD,MAAM4D,UAAa,cAAW,EAAK5D,MAAMM,KAAM,EAAKiE,MAAMyC,WArCnD,EA0CnBmB,SAAW,SAAAH,GACTlE,QAAQC,IAAI,WAAYiE,GACxB,EAAKrD,SAAS,CACZqD,eACAI,kBAAkB,KA9CH,EAkDnBC,gBAAkB,SAAA5F,GAAI,OACpBA,EAAKW,KAAI,SAAAI,GACP,OAAIA,EAAKpB,SAEL,kBAACwE,EAAD,iBACMpD,EADN,CAEEsE,QAAStE,EACTiE,UAAWjE,EAAKiE,WAA4B,IAAfjE,EAAK4D,QAGjC,EAAKiB,gBAAgB7E,EAAKpB,WAK1B,kBAACwE,EAAD,eAAUtD,IAAKE,EAAKF,KAASE,EAA7B,CAAmCsE,QAAStE,SA/DrD,EAAKyD,UAAUjB,MAAK,SAAAvD,GAClBqB,QAAQC,IAAItB,GACZ,EAAKkC,SAAS,CACZmC,SAAS,YAAKrE,QALD,E,sEAqEjB,OACE,6BACE,uBACEgF,WAAS,EACTa,SAAUxD,KAAK6C,WACfI,QAASjD,KAAKiD,QACdhB,YAAajC,KAAKP,MAAMwC,YACxBoB,SAAUrD,KAAKqD,UAEdrD,KAAKuD,gBAAgBvD,KAAKP,MAAMuC,gB,GA9GEhH,IAAMoF,WCH3C0B,E,IAAAA,SAEa2B,E,YAiCnB,WAAYvI,GAAQ,IAAD,8BACjB,4CAAMA,KAjCRuE,MAAQ,CACNuC,SAAU,GACVC,YAAa,GACbC,MAAO,IA6BU,EA1BnBC,QAAU,gDAAAC,EAAAC,OAAA,uDACRC,EADQ,+BACA,EACRC,EAFQ,+BAEG,CACTrH,MAAO,IAIHsH,EAAM,CACV,wBACA,wBACA,2BAJEC,EAAe,IAMNlD,GAAKgD,EAASrH,MAAMwH,SAZzB,WAAAN,EAAA,MAaeR,EAAIY,EAAIF,GAAL,eACrBG,EADqB,GAErB,EAAKvH,MAAMwI,WAfR,uBAaA/F,EAbA,EAaAA,KAbA,kBAiBDA,EAAKW,KAAI,SAAAI,GAAI,MAAK,CACvBtB,MAAOsB,EAAKtB,OAASsB,EAAKlD,KAC1BgD,IAAKE,EAAKa,GACVoD,UAAqB,IAAVL,EACXA,MAAOA,EAAQ,EACfM,OAAkB,IAAVN,OAtBF,uCA0BS,EASnBO,WAAa,SAAMN,GAAN,SAAAH,EAAAC,OAAA,yEACX,IAAIS,SAAQ,SAAAC,GACNR,EAASrH,MAAMoC,SACjByF,IAGF,EAAKZ,QAAQI,EAASrH,MAAMoH,MAAOC,GAAUrB,MAAK,SAAA5D,GAChDiF,EAASrH,MAAM8H,QAAQ1F,SAAWA,EAClC,EAAKuC,SAAS,CACZmC,SAAS,YAAK,EAAKvC,MAAMuC,YAE3Be,WAXO,sCATM,EAwBnBE,QAAU,SAAAhB,GACR,EAAKpC,SACH,CACEoC,cACAC,MAAOD,EAAYkB,QACjB,SAAAzE,GAAI,OAAI,EAAKe,MAAMyD,aAAaE,QAAQ1E,GAAQ,OAGpD,YACG,EAAKxD,MAAM4D,UAAa,cAAW,EAAK5D,MAAMM,KAAM,EAAKiE,MAAMyC,WAjCnD,EAsCnBmB,SAAW,SAAAH,GACT,EAAKrD,SAAS,CACZqD,eACAI,kBAAkB,KAzCH,EA6CnBC,gBAAkB,SAAA5F,GAAI,OACpBA,EAAKW,KAAI,SAAAI,GACP,OAAIA,EAAKpB,SAEL,kBAAC,EAAD,iBACMoB,EADN,CAEEsE,QAAStE,EACTiE,UAAWjE,EAAKiE,WAA4B,IAAfjE,EAAK4D,QAGjC,EAAKiB,gBAAgB7E,EAAKpB,WAI1B,kBAAC,EAAD,eAAUkB,IAAKE,EAAKF,KAASE,EAA7B,CAAmCsE,QAAStE,SAzDrD,EAAKyD,UAAUjB,MAAK,SAAAvD,GAClB,EAAKkC,SAAS,CACZmC,SAAS,YAAKrE,QAJD,E,sEA+DjB,OACE,6BACE,uBACEgF,WAAS,EACTvE,SAAU4B,KAAK9E,MAAMkD,SACrBoF,SAAUxD,KAAK6C,WACfI,QAASjD,KAAKiD,QACdhB,YAAajC,KAAKP,MAAMwC,YACxBoB,SAAUrD,KAAKqD,UAEdrD,KAAKuD,gBAAgBvD,KAAKP,MAAMuC,gB,GA1GGhH,IAAMoF,W,iBCJ5CuD,E,IAAAA,OAEO,WAAAzI,GAAU,IAAD,EACAqC,mBAAS,IADT,mBACfqG,EADe,KACVC,EADU,KActB,OAPA/F,qBAAU,WACR8D,EAAI,yBAAyBV,MAAK,SAAA4C,GAEhCD,EAAOC,EAAInG,MAAQ,SAEpB,IAGD,uBACES,SAAUlD,EAAMkD,SAChB2F,YAAU,EACV3I,MAAO,CAAE4I,MAAO,QAChBC,YAAY,2BACZC,iBAAiB,WACjBpF,SAlBa,SAAAoD,GACfhH,EAAM4D,SAAS5D,EAAMM,KAAM0G,IAkBzBiC,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOnJ,MAAMoC,SAASgH,cAAclB,QAAQgB,EAAME,gBAAkB,IAGrEV,EAAItF,KAAI,SAAAI,GAAI,OACX,kBAACiF,EAAD,CAAQzB,MAAOxD,EAAKa,GAAIf,IAAKE,EAAKa,IAC/Bb,EAAKlD,WC9BRmI,E,IAAAA,OAEO,WAAAzI,GAAU,IAAD,EACAqC,mBAAS,IADT,mBACfqG,EADe,KACVC,EADU,KActB,OAPA/F,qBAAU,WACR8D,EAAI,uBAAuBV,MAAK,SAAA4C,GAE9BD,EAAOC,EAAInG,MAAQ,SAEpB,IAGD,uBACES,SAAUlD,EAAMkD,SAChB2F,YAAU,EACV3I,MAAO,CAAE4I,MAAO,QAChBC,YAAY,2BACZC,iBAAiB,WACjBpF,SAlBa,SAAAoD,GACfhH,EAAM4D,SAAS5D,EAAMM,KAAM0G,IAkBzBiC,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOnJ,MAAMoC,SAASgH,cAAclB,QAAQgB,EAAME,gBAAkB,IAGrEV,EAAItF,KAAI,SAAAI,GAAI,OACX,kBAAC,EAAD,CAAQwD,MAAOxD,EAAKa,GAAIf,IAAKE,EAAKa,IAC/Bb,EAAKlD,WC3BRsG,G,IAAAA,SAEaC,G,YA+BnB,WAAY7G,GAAQ,IAAD,8BACjB,4CAAMA,KA/BRuE,MAAQ,CACNuC,SAAU,GACVC,YAAa,GACbC,MAAO,IA2BU,EAxBnBC,QAAU,gDAAAC,EAAAC,OAAA,uDACRC,EADQ,+BACA,EACRC,EAFQ,+BAEG,CACTrH,MAAO,IAIHsH,EAAM,CACV,wBACA,uBAEA,0BALEC,EAAe,IAONlD,GAAKgD,EAASrH,MAAMwH,SAbzB,WAAAN,EAAA,MAceR,EAAIY,EAAIF,GAAQG,IAd/B,uBAcA9E,EAdA,EAcAA,KAdA,kBAeDA,EAAKW,KAAI,SAAAI,GAAI,MAAK,CACvBtB,MAAOsB,EAAKlD,KACZgD,IAAe,IAAV8D,EAAc5D,EAAK6F,SAAW7F,EAAKa,GACxCoD,UAAqB,IAAVL,EACXA,MAAOA,EAAQ,EACfM,OAAkB,IAAVN,OApBF,uCAwBS,EASnBO,WAAa,SAAMN,GAAN,SAAAH,EAAAC,OAAA,yEACX,IAAIS,SAAQ,SAAAC,GACNR,EAASrH,MAAMoC,SACjByF,IAGF,EAAKZ,QAAQI,EAASrH,MAAMoH,MAAOC,GAAUrB,MAAK,SAAA5D,GAChDiF,EAASrH,MAAM8H,QAAQ1F,SAAWA,EAClC,EAAKuC,SAAS,CACZmC,SAAS,YAAK,EAAKvC,MAAMuC,YAE3Be,WAXO,sCATM,EAwBnBE,QAAU,SAAAhB,GACR,EAAKpC,SACH,CACEoC,cACAC,MAAO,CACLsC,SAAUvC,EAAYkB,QACpB,SAAAzE,GAAI,OAAI,EAAKe,MAAMyD,aAAaE,QAAQ1E,GAAQ,KAElD+F,QAASxC,EAAYkB,QACnB,SAAAzE,GAAI,OAAI,EAAKe,MAAMyD,aAAaE,QAAQ1E,IAAS,QAIvD,YACG,EAAKxD,MAAM4D,UAAa,cAAW,EAAK5D,MAAMM,KAAM,EAAKiE,MAAMyC,WAtCnD,EA2CnBmB,SAAW,SAAAH,GACT,EAAKrD,SAAS,CACZqD,eACAI,kBAAkB,KA9CH,EAkDnBC,gBAAkB,SAAA5F,GAAI,OACpBA,EAAKW,KAAI,SAAAI,GACP,OAAIA,EAAKpB,SAEL,kBAAC,GAAD,iBACMoB,EADN,CAEEsE,QAAStE,EACTiE,UAAWjE,EAAKiE,WAA4B,IAAfjE,EAAK4D,QAGjC,EAAKiB,gBAAgB7E,EAAKpB,WAI1B,kBAAC,GAAD,eAAUkB,IAAKE,EAAKF,KAASE,EAA7B,CAAmCsE,QAAStE,SA9DrD,EAAKyD,UAAUjB,MAAK,SAAAvD,GAClB,EAAKkC,SAAS,CACZmC,SAAS,YAAKrE,QAJD,E,sEAoEjB,OACE,6BACE,uBACEgF,WAAS,EACTa,SAAUxD,KAAK6C,WACfI,QAASjD,KAAKiD,QACdhB,YAAajC,KAAKP,MAAMwC,YACxBoB,SAAUrD,KAAKqD,UAEdrD,KAAKuD,gBAAgBvD,KAAKP,MAAMuC,gB,GA5GEhH,IAAMoF,WCL3CuD,G,IAAAA,OAEO,YAAAzI,GAAU,IAAD,EACAqC,mBAAS,IADT,mBACfqG,EADe,KACVC,EADU,KActB,OAPA/F,qBAAU,WACR8D,EAAI,yBAAyBV,MAAK,SAAA4C,GAEhCD,EAAOC,EAAInG,MAAQ,SAEpB,IAGD,uBACES,SAAUlD,EAAMkD,SAChB2F,YAAU,EACV3I,MAAO,CAAE4I,MAAO,QAChBC,YAAY,2BACZC,iBAAiB,WACjBpF,SAlBa,SAAAoD,GACfhH,EAAM4D,SAAS5D,EAAMM,KAAM0G,IAkBzBiC,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOnJ,MAAMoC,SAASgH,cAAclB,QAAQgB,EAAME,gBAAkB,IAGrEV,EAAItF,KAAI,SAAAI,GAAI,OACX,kBAAC,GAAD,CAAQwD,MAAOxD,EAAK6F,SAAU/F,IAAKE,EAAKa,IACrCb,EAAKlD,WChBDR,OAAM0J,YAAW,SAACxJ,EAAOyJ,GAAS,IAAD,EAClBpH,mBAAS,IADS,mBACvCqH,EADuC,KAC7BC,EAD6B,OAEpBtH,mBAAS,IAFW,mBAEvCuH,EAFuC,KAEhCC,EAFgC,KAGxCvI,EAAUC,qBAAWC,GACrBsI,EAAW,WAKf,OAHIF,EAAMjJ,OAAS,GACjBwF,EAAA,EAAa4D,KAAK,CAAErG,QAAQ,mDAAD,OAAakG,EAAMI,cAEzC,CAAkB,IAAjBJ,EAAMjJ,OAAc+I,IAc9B,OAZAO,8BAAoBR,GAAK,iBAAO,CAC9BS,OAAQJ,MAGVlH,qBAAU,WACRtB,EAAQ,WAAatB,EAAMmK,UAAY,UAAU,CAC/C1H,KAAMiH,EACNE,YAGD,CAACF,EAAUE,IAGZ,kBAAC,IAAD,CACEQ,YAAapK,EAAMqK,OAEnBX,SAAUA,EACV9F,SAAU+F,EACVW,WAAYT,EACZU,QAAS,CACPC,gBAAiB3D,EACjB4D,iBAAkBlC,EAClBmC,gBAAiBC,EACjBC,cAAeC,EACfC,eAAgBC,GAChBC,gBAAiBC,SCrDV,IACbhI,KAAM,SACNiI,WAAY,CACV7G,GAAI,CACFnC,MAAO,iBACPe,KAAM,UAERkI,SAAU,CACRjJ,MAAO,2BACPe,KAAM,SACNmI,OAAQ,cCVC,IACbnI,KAAM,SACNiI,WAAY,CACV5K,KAAM,CACJ4B,MAAO,2BACPe,KAAM,YCLG,IACbA,KAAM,SACNiI,WAAY,CACV5K,KAAM,CACJ4B,MAAO,2BACPe,KAAM,YCLG,IACbA,KAAM,SACNiI,WAAY,CACV5K,KAAM,CACJ4B,MAAO,2BACPe,KAAM,YCLG,IACbA,KAAM,SACNiI,WAAY,CACV5K,KAAM,CACJ4B,MAAO,2BACPe,KAAM,UAGRoI,YAAa,CACXnJ,MAAO,2BACPe,KAAM,QACN,YAAa,mBAEfqI,QAAS,CACPpJ,MAAO,2BACPe,KAAM,SACN,YAAa,qBChBJ,IACbA,KAAM,SACNiI,WAAY,CACV5K,KAAM,CACJ4B,MAAO,2BACPe,KAAM,UAGRA,KAAM,CACJf,MAAO,eACPe,KAAM,SACNsI,KAAM,CAAC,OAAQ,SACfC,UAAW,CAAC,eAAM,uBAEpBC,QAAS,CACPvJ,MAAO,2BACPe,KAAM,SACNmI,OAAQ,YAEVM,MAAO,CACLxJ,MAAO,2BACPe,KAAM,SACNmI,OAAQ,YAEVO,QAAS,CACPzJ,MAAO,2BACPe,KAAM,SACN,YAAa,iBAEf2I,MAAO,CACL1J,MAAO,uCACPe,KAAM,SACN,YAAa,oBChCJ,IACbA,KAAM,SACNiI,WAAY,CACV5K,KAAM,CACJ4B,MAAO,2BACPe,KAAM,YCLG,IACbA,KAAM,SACNiI,WAAY,CACV5K,KAAM,CACJ4B,MAAO,2BACPe,KAAM,UAER4I,QAAS,CACP3J,MAAO,2BACPe,KAAM,SACN,YAAa,mBAEf6I,QAAS,CACP5J,MAAO,uCACPe,KAAM,WAER8I,UAAW,CACT7J,MAAO,iCACPe,KAAM,SACN+I,QAAS,GAEXC,WAAY,CACV/J,MAAO,6CACPe,KAAM,QACN,cAAe,SAACyG,EAAUwC,GAAX,OAAyBxC,EAASqC,WAAa,GAC9D,YAAa,mBACb,aAAc,CACZ9I,KAAM,UAER+I,QAAS,IAEXG,SAAU,CACRjK,MAAO,iCACPe,KAAM,SACN+I,QAAS,GAEXI,UAAW,CACTlK,MAAO,6CACPe,KAAM,QACN,cAAe,SAAAyG,GAAQ,OAAIA,EAASyC,UAAY,GAChD,YAAa,mBACb,aAAc,CACZlJ,KAAM,SAER+I,QAAS,IAEXK,aAAc,CACZnK,MAAO,iCACPe,KAAM,SACN+I,QAAS,GAEXM,cAAe,CACbpK,MAAO,6CACPe,KAAM,QACN,cAAe,SAAAyG,GAAQ,OAAIA,EAAS2C,cAAgB,GACpD,YAAa,mBACb,aAAc,CACZpJ,KAAM,aAER+I,QAAS,MC3DA,IACb/I,KAAM,SACNiI,WAAY,CACV7G,GAAI,CACFnC,MAAO,gCACPe,KAAM,SACNmI,OAAQ,WCNC,IACbnI,KAAM,SACNiI,WAAY,CACV5K,KAAM,CACJ4B,MAAO,2BACPe,KAAM,YCLG,IACbA,KAAM,SACNiI,WAAY,CACV5K,KAAM,CACJ4B,MAAO,2BACPe,KAAM,UAGRoB,GAAI,CACFnC,MAAO,iBACPe,KAAM,UAERkI,SAAU,CACRjJ,MAAO,2BACPe,KAAM,SACNmI,OAAQ,WACRY,QAAS,YChBA,IACb/I,KAAM,SACNiI,WAAY,CACV7G,GAAI,CACFnC,MAAO,gCACPe,KAAM,SACNmI,OAAQ,WCWDmB,GAAQ,kBAAM,kBAACC,GAAD,CAAMnC,OAAQoC,GAAOtC,SAAS,eAC5CuC,GAAiB,kBAC5B,kBAACF,GAAD,CAAMnC,OAAQsC,GAAgBxC,SAAS,oBAE5ByC,GAAiB,kBAC5B,kBAACJ,GAAD,CAAMnC,OAAQwC,GAAgB1C,SAAS,oBAE5B2C,GAAe,kBAC1B,kBAACN,GAAD,CAAMnC,OAAQ0C,GAAc5C,SAAS,kBAE1B6C,GAAgB,kBAC3B,kBAACR,GAAD,CAAMnC,OAAQ4C,GAAe9C,SAAS,mBAE3B+C,GAAc,kBACzB,kBAACV,GAAD,CAAMnC,OAAQ8C,GAAahD,SAAS,iBAEzBiD,GAAe,kBAC1B,kBAACZ,GAAD,CAAMnC,OAAQgD,GAAclD,SAAS,kBAE1BmD,GAAe,kBAC1B,kBAACd,GAAD,CAAMnC,OAAQkD,GAAcpD,SAAS,kBAK1BqD,GAAkB,kBAC7B,kBAAChB,GAAD,CAAMnC,OAAQoD,GAAiBtD,SAAS,qBAE7BuD,GAAiB,kBAC5B,kBAAClB,GAAD,CAAMnC,OAAQsD,GAAgBxD,SAAS,oBAE5ByD,GAAiB,kBAC5B,kBAACpB,GAAD,CAAMnC,OAAQwD,GAAgB1D,SAAS,oBAE5B2D,GAAmB,kBAC9B,kBAACtB,GAAD,CAAMnC,OAAQ0D,GAAkB5D,SAAS,sBCnD5B,eAAqB,EAAlB1H,KAChB,QADkC,EAAZmH,MACZjJ,OAAS,KACjBwF,EAAA,EAAaC,MAAM,CACjB1C,QAAQ,yDACR8C,SAAU,KAEL,I,qCCHEwH,I,OAAc,SAAAhO,GACzB,OACE,wBAAKiO,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvB,wBACEjM,MAAOlC,EAAMoO,aAAe,UAC5BC,UAAU,EACVnO,MAAO,CAAEoO,SAAU,KACnBnL,QAAS,CACP,uBAAQrB,QAAS,kBAAO9B,EAAM+B,SAAY,cAAW/B,KAArD,uBAKkB4B,IAAnB5B,EAAMuO,UAA0B,sDAAQvO,EAAMuO,UAC9CvO,EAAMwO,UAAY,sDAAQxO,EAAMwO,cAM5BC,GAAY,SAAAzO,GACvB,OACE,wBAAKiO,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvB,wBAEEE,UAAU,EACVnO,MAAO,CAAEoO,SAAU,KACnBnL,QAAS,CACP,uBAAQrB,QAAS,kBAAO9B,EAAM+B,SAAY,cAAW/B,KAArD,kBAKDA,EAAM0O,UACN1O,EAAMwO,UAAY,sDAAQxO,EAAMwO,aAM5BG,GAAc,SAAA3O,GACzB,OACE,wBAAKiO,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvB,wBACEjM,MAAOlC,EAAMM,MAAQ,UACrB+N,UAAU,EACVnO,MAAO,CAAEoO,SAAU,KACnBnL,QAAS,CACP,uBACErB,QAAS,YAIN9B,EAAM4O,cAHQ,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAC1B/K,QAAQC,IAAI8K,KAEiB7O,KALnC,4BAUA,uBACE8B,QAAS,YAIN9B,EAAM8O,eAHQ,WAAc,IAAD,uBAATD,EAAS,yBAATA,EAAS,gBAC1B/K,QAAQC,IAAI8K,KAEkB7O,KALpC,mCAYkB4B,IAAnB5B,EAAMuO,UAA0B,sDAAQvO,EAAMuO,aC9DxC,YAAAvO,GAAU,IAAD,EACQqC,oBAAS,GADjB,mBACfuC,EADe,KACNmK,EADM,OAEA1M,wBAAST,GAFT,mBAEf8G,EAFe,KAEVC,EAFU,KAGhBrH,EAAUC,qBAAWC,GAErBwN,EAAY,WAChBD,GAAYnK,IAGRqK,EAAO,WACPjP,EAAMkP,SAASC,MACjBzI,EAAI,sBAAsBV,MAAK,SAAA4C,GAC7B9E,QAAQC,IAAI6E,GACZD,EAAOC,EAAInG,MAAQ,OAEgB,sBAA5BzC,EAAMkP,SAASE,SACxB1I,EAAI,sBAAsBV,MAAK,SAAA4C,GAC7B9E,QAAQC,IAAI6E,GACZD,EAAOC,EAAInG,MAAQ,OAGrBzC,EAAMkP,SAASG,KAAK,MAOxB,OAHAzM,qBAAU,WACRqM,MACC,IAED,6BACE,kBAAC,EAAD,CACErK,QAASA,EACTI,OAAQ,WACNgK,KAEFtK,SAAU,WACRZ,QAAQC,IAAIzC,EAAQ6L,aAChBmC,GAAahO,EAAQ6L,eACvBrJ,QAAQC,IAAIzC,EAAQ6L,aACpBhI,EAAK,0BAAD,eACC7D,EAAQ6L,YAAY1K,OAEtBuD,MAAK,SAAA4C,GACJzC,EAAA,EAAaoJ,QAAQ,CAAE7L,QAAS,2BAAQ8C,SAAU,IAClDwI,IACAC,OAEDO,OAAM,SAAAC,GACLtJ,EAAA,EAAaC,MAAM,CACjB1C,QAAS,2BACT8C,SAAU,UAMpB,kBAAC,GAAD,OAEF,kBAAC,EAAD,CACEtE,MAAM,2BACNwN,OAAQ,WACN1P,EAAM2P,QAAQC,UAEhB/N,OAAQ,CACNvB,KAAM,2BACNyB,QAAS,WACPiN,QAIN,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEhL,QAAS,CACP,CACE9B,MAAO,2BACP2N,UAAW,QAEb,CACE3N,MAAO,eACP2N,UAAW,SAEb,CACE3N,MAAO,2BACP4N,OAAQ,SAACC,EAAM3L,GAAP,gBACH,IAAI4L,KAAK5L,EAAOqH,SAASwE,qBADtB,YAC8C,IAAID,KACtD5L,EAAOqH,SACPyE,wBAEN,CACEhO,MAAO,eACP2N,UAAW,OACXM,QAAS,CACP,CAAEJ,KAAM,qBAAO/I,MAAO,UACtB,CAAE+I,KAAM,qBAAO/I,MAAO,UACtB,CAAE+I,KAAM,qBAAO/I,MAAO,QAExBoJ,SAAU,SAACpJ,EAAO5C,GAAR,OAAmBA,EAAO9D,KAAK+P,SAASrJ,KAEpD,CACE9E,MAAO,eACP2N,UAAW,SACXM,QAAS,CACP,CAAEJ,KAAM,qBAAO/I,MAAO,UACtB,CAAE+I,KAAM,qBAAO/I,MAAO,UACtB,CAAE+I,KAAM,qBAAO/I,MAAO,QAExBoJ,SAAU,SAACpJ,EAAO5C,GAAR,OAAmBA,EAAO9D,KAAK+P,SAASrJ,KAEpD,CACE9E,MAAO,eACP4N,OAAQ,SAACC,EAAM3L,GACb,OACE,8BACE,uBACEtC,QAAS,WACPgC,QAAQC,IAAIK,KAFhB,gBAOA,uBAASnB,KAAK,aACd,uBACEnB,QAAS,WACP9B,EAAM2P,QAAQN,KAAK,CACjBD,SAAU,wBACVD,MAAO/K,MAJb,oBAeV3B,KAAMiG,O,mBChJD,I,OAAA,SAAA1I,GAAK,OAClBA,EAAMyC,KACJ,uBAAKxC,UAAU,cACZD,EAAMyC,KAAKW,KAAI,SAACI,EAAMH,GAAP,OACd,wBAAK4K,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG7K,IAAKD,GAC9B,wBAAW2D,MAAOxD,EAAKwD,MAAO9E,MAAOsB,EAAKtB,aAI9C,OCMS,IACb,CACEoO,OAAO,EACPC,KAAM,IACNjQ,KAAM,eACNkQ,KAAM,UACNC,UAAWC,GAEb,CACEH,KAAM,eACNjQ,KAAM,2BACNkQ,KAAM,UACNC,UAAWC,GAEb,CACEH,KAAM,eACNjQ,KAAM,2BACNkQ,KAAM,UACNG,OAAQ,CACN,CACEJ,KAAM,uBACNE,UC7BO,SAAAzQ,GAAU,IAAD,EACQqC,oBAAS,GADjB,mBACfuC,EADe,KACNmK,EADM,OAEA1M,wBAAST,GAFT,mBAEf8G,EAFe,KAEVC,EAFU,KAGhBrH,EAAUC,qBAAWC,GACrBwN,EAAY,WAChBD,GAAYnK,IAEdhC,qBAAU,WACJgO,OAAOC,KAAKvP,EAAQG,UAAUd,OAAS,EACzC+F,EAAI,wBAAyB,CAAErC,GAAI,IAAK2B,MAAK,SAAA4C,GAE3CD,EAAOC,EAAInG,MAAQ,OAGrBqB,QAAQC,IAAI,OAAQzC,EAAQG,YAE7B,CAACH,EAAQG,WAQZ,OACE,6BACE,kBAAC,EAAD,CACEmD,QAASA,EACTI,OAAQ,WACFsK,GAAahO,EAAQuM,iBACvB1I,EAAK,6BAA8B7D,EAAQuM,eAAepL,MACvDuD,MAAK,SAAA4C,GACJoG,IACA7I,EAAA,EAAaoJ,QAAQ,CACnB7L,QAAS,gCAGZ8L,OAAM,SAAAC,GACLtJ,EAAA,EAAaC,MAAM,CACjB1C,QAAS,2BACT8C,SAAU,SAMpB,kBAAC,GAAD,OAEF,kBAAC,EAAD,CACEtE,MAAM,2BACNL,OAAQ,CACNvB,KAAM,2BACNyB,QAAS,WACPiN,QAIN,kBAAC,EAAD,KACE,2BACE,kBAAC,EAAD,CACEhL,QAAS,CACP,CACE9B,MAAO,eACP2N,UAAW,MAEb,CACE3N,MAAO,eACP2N,UAAW,QAEb,CACE3N,MAAO,eACP4N,OAAQ,SAACC,EAAM3L,GAAP,OACN,8BACE,uBACEtC,QAAS,YAxDP,SAAAsC,GACpBe,EAAK,sBAAuBf,GAAQ4B,MAAK,SAAA4C,GACvC9E,QAAQC,IAAI6E,MAuDMkI,CAAc,CAAEC,KAAM3M,EAAOiF,aAFjC,4BAOA,uBAASpG,KAAK,aACd,uBACEnB,QAAS,cADX,gCAWRqB,QAAS,CACP,CACEjB,MAAO,eACPH,QAAS,SAAAiP,GACPlN,QAAQC,IAAIiN,MAIlBvO,KAAMiG,QDtEVpI,KAAM,2BACNS,SAAS,GAEX,CACEwP,KAAM,uBACNE,UElCO,SAAAzQ,GAAU,IAAD,EACQqC,oBAAS,GADjB,mBACfuC,EADe,KACNmK,EADM,OAEA1M,mBAAS,IAFT,mBAEfqG,EAFe,KAEVC,EAFU,KAGhBrH,EAAUC,qBAAWC,GAErBwN,EAAY,WAChBD,GAAYnK,IAGdhC,qBAAU,WACJtB,EAAQG,UACVwN,MAED,IAEH,IAAML,EAAe,SAAApL,GACnBxD,EAAM2P,QAAQN,KAAK,CAAED,SAAU,sBAAuBD,MAAO3L,KAEzDsL,EAAgB,SAAAtL,GACpBxD,EAAM2P,QAAQN,KAAK,CAAED,SAAU,uBAAwBD,MAAO3L,KAG1DyL,EAAO,WACXvI,EAAI,wBAAyB,CAAErC,GAAI,IAAK2B,MAAK,SAAA4C,GAE3CD,EAAOC,EAAInG,MAAQ,QAIvB,OACE,6BACE,kBAAC,EAAD,CACEmC,QAASA,EACTF,SAAU,WAEJ4K,GAAahO,EAAQqM,iBACvBxI,EAAK,6BAA8B7D,EAAQqM,eAAelL,MACvDuD,MAAK,SAAA4C,GACJzC,EAAA,EAAaoJ,QAAQ,CAAE7L,QAAS,2BAAQ8C,SAAU,IAClDwI,IACAC,OAEDO,OAAM,SAAAC,GACLtJ,EAAA,EAAaC,MAAM,CACjB1C,QAAS,2BACT8C,SAAU,QAKpBxB,OAAQ,WACNgK,MAGF,kBAAC,GAAD,OAEF,kBAAC,EAAD,CACE9M,MAAM,2BACNL,OAAQ,CACNvB,KAAM,2BACNyB,QAAS,WACPiN,QAIN,kBAAC,EAAD,KACGtG,EAAItF,KAAI,SAAA6N,GAAO,OACd,kBAAC,GAAD,CACE5M,GAAI4M,EAAQ5M,GACZf,IAAK2N,EAAQ5M,GACb/D,KAAM2Q,EAAQ3Q,KAEdiO,SAAU0C,EAAQ1C,SAClBK,aAAcA,EACdE,cAAeA,UFvCnBxO,KAAM,2BACNS,SAAS,GAEX,CACEwP,KAAM,sBACNE,UGzCO,SAAAzQ,GAAU,IAAD,EACQqC,oBAAS,GADjB,mBACfuC,EADe,KACNmK,EADM,OAEA1M,wBAAST,GAFT,mBAEf8G,EAFe,KAEVC,EAFU,KAIhBrH,EAAUC,qBAAWC,GAErBwN,EAAY,WAChBD,GAAYnK,IAGRqK,EAAO,WACXvI,EAAI,uBAAwB,CAAErC,GAAIrE,EAAMkP,SAASC,MAAM9K,KAAM2B,MAAK,SAAA4C,GAChE9E,QAAQC,IAAI6E,GACZD,EAAOC,EAAInG,MAAQ,QAYvB,OARAG,qBAAU,WACJ5C,EAAMkP,SAASC,OAAS7N,EAAQG,SAClCwN,IAEAjP,EAAM2P,QAAQN,KAAK,0BAEpB,IAGD,6BACE,kBAAC,EAAD,CACEzK,QAASA,EACTI,OAAQ,WACNgK,KAEFtK,SAAU,WACJ4K,GAAahO,EAAQ2L,gBACvB9H,EAAK,4BAAD,eACC7D,EAAQ2L,cAAcxK,KADvB,CAEFwO,QAASjR,EAAMkP,SAASC,MAAM9K,MAE7B2B,MAAK,SAAA4C,GACJzC,EAAA,EAAaoJ,QAAQ,CAAE7L,QAAS,2BAAQ8C,SAAU,IAClDwI,IACAC,OAEDO,OAAM,SAAAC,GACLtJ,EAAA,EAAaC,MAAM,CACjB1C,QAAS,2BACT8C,SAAU,SAMpB,kBAAC,GAAD,OAEF,kBAAC,EAAD,CACEtE,MAAM,2BACNwN,OAAQ,WACN1P,EAAM2P,QAAQC,UAEhB/N,OAAQ,CACNvB,KAAM,2BACNyB,QAAS,WACPiN,QAIN,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEhL,QAAS,CACP,CACE9B,MAAO,2BACP2N,UAAW,QAMb,CACE3N,MAAO,eACP2N,UAAW,SACXM,QAAS,CACP,CAAEJ,KAAM,qBAAO/I,MAAO,UACtB,CAAE+I,KAAM,qBAAO/I,MAAO,QAExBoJ,SAAU,SAACpJ,EAAO5C,GAAR,OAAmBA,EAAOkC,OAAO+J,SAASrJ,KAEtD,CACE9E,MAAO,eACP4N,OAAQ,SAACC,EAAM3L,GACb,OACE,8BACE,uBACEtC,QAAS,WACPgC,QAAQC,IAAIK,KAFhB,gBAOA,uBACEtC,QAAS,WACP9B,EAAM2P,QAAQN,KAAK,CACjBD,SAAU,kBACVD,MAAO/K,MAJb,oBAeV3B,KAAMiG,OHvERpI,KAAM,4BAER,CACEiQ,KAAM,uBACNE,UI9CO,SAAAzQ,GAAU,IAAD,EACQqC,oBAAS,GADjB,mBACfuC,EADe,KACNmK,EADM,OAEA1M,wBAAST,GAFT,mBAEf8G,EAFe,KAEVC,EAFU,KAGhBqG,EAAY,WAChBD,GAAYnK,IAgBd,OAbAhC,qBAAU,WACJ5C,EAAMkP,SAASC,OACjBrL,QAAQC,IAAI,QACZ2C,EAAI,wBAAyB,CAAErC,GAAIrE,EAAMkP,SAASC,MAAM9K,KAAM2B,MAC5D,SAAA4C,GACE9E,QAAQC,IAAI6E,GACZD,EAAOC,EAAInG,MAAQ,QAIvBzC,EAAM2P,QAAQN,KAAK,0BAEpB,CAACrP,IAEF,6BACE,kBAAC,EAAD,CACE4E,QAASA,EACTI,OAAQ,WACNgK,MAGF,kBAAC,GAAD,OAEF,kBAAC,EAAD,CACE9M,MAAM,2BACNL,OAAQ,CACNvB,KAAM,2BACNyB,QAAS,WACPiN,QAIN,kBAAC,EAAD,KACE,2BACE,kBAAC,EAAD,CACEvM,KAAMiG,EACN1E,QAAS,CACP,CACE9B,MAAO,eACP2N,UAAW,MAEb,CACE3N,MAAO,eACP2N,UAAW,QAEb,CACE3N,MAAO,eACP4N,OAAQ,SAACC,EAAM3L,GAAP,OACN,8BACE,uBACE8M,KAAK,IACLpP,QAAS,WACPgC,QAAQC,IAAIK,KAHhB,gCAYRjB,QAAS,CACP,CACEjB,MAAO,eACPH,QAAS,SAAAiP,GACPlN,QAAQC,IAAIiN,YJzBtB1Q,KAAM,4BAER,CACEiQ,KAAM,oBACNE,UAAWU,GACX7Q,KAAM,4BAER,CACEiQ,KAAM,wBACNE,UK7DO,SAAAzQ,GACb,OACE,6BACE,kBAAC,EAAD,CACEkC,MAAM,2BACNwN,OAAQ,WACN1P,EAAM2P,QAAQC,YAGlB,kBAAC,EAAD,KACE,kBAAC,GAAD,CACEnN,KAAM,CACJ,CACEP,MAAO,qBACP8E,MAAO,IAET,CACE9E,MAAO,qBACP8E,MAAO,IAET,CACE9E,MAAO,2BACP8E,MAAO,OAIb,kBAAC,EAAD,CACEhD,QAAS,CACP,CACE9B,MAAO,eACP2N,UAAW,QAEb,CACE3N,MAAO,eACP2N,UAAW,MAEb,CACE3N,MAAO,eACP2N,UAAW,eLwBjBvP,KAAM,4BAER,CACEiQ,KAAM,uBACNE,UM9DO,SAAAzQ,GAAU,IAAD,EACQqC,oBAAS,GADjB,mBACfuC,EADe,KACNmK,EADM,OAEA1M,wBAAST,GAFT,mBAEf8G,EAFe,KAEVC,EAFU,KAIhBrH,EAAUC,qBAAWC,GAErBwN,EAAY,WAChBD,GAAYnK,IAGRqK,EAAO,WACXvI,EAAI,wBAAyB,CAAErC,GAAIrE,EAAMkP,SAASC,MAAM9K,KAAM2B,MAAK,SAAA4C,GACjE9E,QAAQC,IAAI6E,GACZD,EAAOC,EAAInG,MAAQ,QAWvB,OARAG,qBAAU,WACJ5C,EAAMkP,SAASC,OAAS7N,EAAQG,SAClCwN,IAEAjP,EAAM2P,QAAQN,KAAK,0BAEpB,IAGD,6BACE,kBAAC,EAAD,CACEzK,QAASA,EACTF,SAAU,WACRZ,QAAQC,IAAI/D,EAAMkP,SAASC,MAAO7N,EAAQuL,gBACtCyC,GAAahO,EAAQuL,iBACvB1H,EAAK,6BAAD,eACC7D,EAAQuL,eAAepK,KADxB,CAEFwO,QAASjR,EAAMkP,SAASC,MAAM9K,MAE7B2B,MAAK,SAAA4C,GACJzC,EAAA,EAAaoJ,QAAQ,CAAE7L,QAAS,2BAAQ8C,SAAU,IAClDwI,IACAC,OAEDO,OAAM,SAAAC,GACLtJ,EAAA,EAAaC,MAAM,CACjB1C,QAAS,2BACT8C,SAAU,QAKpBxB,OAAQ,WACNgK,MAGF,kBAAC,GAAD,OAEF,kBAAC,EAAD,CACE9M,MAAM,2BACNwN,OAAQ,WACN1P,EAAM2P,QAAQC,UAEhB/N,OAAQ,CACNvB,KAAM,2BACNyB,QAAS,WACPiN,QAIN,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEvM,KAAMiG,EACN1E,QAAS,CACP,CACE9B,MAAO,2BACP2N,UAAW,QAEb,CACE3N,MAAO,eACP4N,OAAQ,SAACC,EAAM3L,GACb,OACE,8BACE,uBACEtC,QAAS,WACP9B,EAAM2P,QAAQN,KAAK,CACjBD,SAAU,wBACVD,MAAO/K,MAJb,qCNhBZ9D,KAAM,4BAER,CACEiQ,KAAM,wBACNE,UOlEO,SAAAzQ,GAAU,IAAD,EACQqC,oBAAS,GADjB,mBACfuC,EADe,KACNmK,EADM,OAEA1M,wBAAST,GAFT,mBAEf8G,EAFe,KAEVC,EAFU,KAIhBrH,EAAUC,qBAAWC,GAErBwN,EAAY,WAChBD,GAAYnK,IAGRqK,EAAO,WACXvI,EAAI,yBAA0B,CAAErC,GAAIrE,EAAMkP,SAASC,MAAM9K,KAAM2B,MAAK,SAAA4C,GAClE9E,QAAQC,IAAI6E,GACZD,EAAOC,EAAInG,MAAQ,QAYvB,OARAG,qBAAU,WACJ5C,EAAMkP,SAASC,OAAS7N,EAAQG,SAClCwN,IAEAjP,EAAM2P,QAAQN,KAAK,0BAEpB,IAGD,6BACE,kBAAC,EAAD,CACEzK,QAASA,EACTI,OAAQ,WACNgK,KAEFtK,SAAU,WACJ4K,GAAahO,EAAQyM,mBAEvB5I,EAAK,4BAAD,eACC7D,EAAQyM,iBAAiBtL,KAD1B,CAEFoJ,QAAS7L,EAAMkP,SAASC,MAAM9K,MAE7B2B,MAAK,SAAA4C,GACJzC,EAAA,EAAaoJ,QAAQ,CAAE7L,QAAS,2BAAQ8C,SAAU,IAClDwI,IACAC,OAEDO,OAAM,SAAAC,GACLtJ,EAAA,EAAaC,MAAM,CACjB1C,QAAS,2BACT8C,SAAU,SAMpB,kBAAC,GAAD,OAEF,kBAAC,EAAD,CACEtE,MAAM,2BACNwN,OAAQ,WACN1P,EAAM2P,QAAQC,UAEhB/N,OAAQ,CACNvB,KAAM,2BACNyB,QAAS,WACPiN,QAIN,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEhL,QAAS,CACP,CACE9B,MAAO,eACP2N,UAAW,SAEb,CACE3N,MAAO,eACP4N,OAAQ,SAACC,EAAM3L,GAEb,OAAQA,EAAOnB,MACb,IAAK,SACH,MAAO,qBACT,IAAK,QACH,MAAO,qBACT,IAAK,YACH,MAAO,uBAGb4M,UAAW,OACXM,QAAS,CACP,CAAEJ,KAAM,qBAAO/I,MAAO,UACtB,CAAE+I,KAAM,qBAAO/I,MAAO,SACtB,CAAE+I,KAAM,qBAAO/I,MAAO,cAGxBoJ,SAAU,SAACpJ,EAAO5C,GAAR,OAAmBA,EAAOnB,OAAS+D,IAE/C,CACE9E,MAAO,eACP4N,OAAQ,SAACC,EAAM3L,GACb,OACE,8BACE,uBACEtC,QAAS,WACPgC,QAAQC,IAAIK,KAFhB,gBAOA,uBAASnB,KAAK,aACd,uBACEnB,QAAS,WACPgC,QAAQC,IAAIK,KAFhB,oBAYVjB,QAAS,CACP,CACEjB,MAAO,eACPH,QAAS,SAAAqP,GACPtN,QAAQC,IAAIqN,MAIlB3O,KAAMiG,OP9DRpI,KAAM,8BAIZ,CACEiQ,KAAM,eACNjQ,KAAM,2BACNkQ,KAAM,UACNG,OAAQ,CACN,CACEJ,KAAM,oBACNjQ,KAAM,2BACNmQ,UAAWU,GACXpQ,SAAS,GAEX,CACEwP,KAAM,qBACNjQ,KAAM,2BACNmQ,UQpFO,SAAAzQ,GAAU,IAAD,EACQqC,oBAAS,GADjB,mBACfuC,EADe,KACNmK,EADM,OAEA1M,wBAAST,GAFT,mBAEf8G,EAFe,KAEVC,EAFU,KAIhBrH,EAAUC,qBAAWC,GAErBwN,EAAY,WAChBD,GAAYnK,IAGRqK,EAAO,WACXvI,EAAI,uBAAuBV,MAAK,SAAA4C,GAC9BD,EAAOC,EAAInG,MAAQ,QAQvB,OAJAG,qBAAU,WACRqM,MACC,IAGD,6BACE,kBAAC,EAAD,CACErK,QAASA,EACTI,OAAQ,WACNgK,KAEFtK,SAAU,WACRZ,QAAQC,IAAIzC,EAAQiM,cAChB+B,GAAahO,EAAQiM,gBACvBzJ,QAAQC,IAAIzC,EAAQiM,cACpBpI,EAAK,2BAAD,eACC7D,EAAQiM,aAAa9K,OAEvBuD,MAAK,SAAA4C,GACJzC,EAAA,EAAaoJ,QAAQ,CAAE7L,QAAS,2BAAQ8C,SAAU,IAClDwI,IACAC,OAEDO,OAAM,SAAAC,GACLtJ,EAAA,EAAaC,MAAM,CACjB1C,QAAS,2BACT8C,SAAU,UAMpB,kBAAC,GAAD,OAEF,kBAAC,EAAD,CACEtE,MAAM,2BACNwN,OAAQ,WACN1P,EAAM2P,QAAQC,UAEhB/N,OAAQ,CACNvB,KAAM,2BACNyB,QAAS,WACPiN,QAIN,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEhL,QAAS,CACP,CACE9B,MAAO,eACP2N,UAAW,QAEb,CACE3N,MAAO,eACP4N,OAAQ,SAACC,EAAM3L,GAAP,OAAmBA,EAAOnB,KAAO,eAAO,uBAElD,CACEf,MAAO,2BACP2N,UAAW,eAEb,CACE3N,MAAO,2BACP2N,UAAW,cAEb,CACE3N,MAAO,2BACP2N,UAAW,kBAEb,CACE3N,MAAO,eACP4N,OAAQ,SAACC,EAAM3L,GACb,OACE,8BACE,uBACEtC,QAAS,WACPgC,QAAQC,IAAIK,KAFhB,gBAOA,uBAASnB,KAAK,aACd,uBACEnB,QAAS,WACPgC,QAAQC,IAAIK,KAFhB,oBAYVjB,QAAS,CACP,CACEjB,MAAO,eACPH,QAAS,SAAAqP,GACPtN,QAAQC,IAAIqN,MAIlB3O,KAAMiG,ORjCR3H,SAAS,KAIf,CACEwP,KAAM,UACNjQ,KAAM,2BACNkQ,KAAM,SACNG,OAAQ,CACN,CACEJ,KAAM,kBACNjQ,KAAM,2BACNmQ,US/FO,SAAAzQ,GAAU,IAAD,EACQqC,oBAAS,GADjB,mBACfuC,EADe,KACNmK,EADM,OAEA1M,mBAAS,IAFT,mBAEfqG,EAFe,KAEVC,EAFU,KAGhBqG,EAAY,WAChBD,GAAYnK,IAERtD,EAAUC,qBAAWC,GAErByN,EAAO,WACXvI,EAAI,mBAAoB,CAAErC,GAAI,IAAK2B,MAAK,SAAA4C,GACtC9E,QAAQC,IAAI6E,GACZD,EAAOC,EAAInG,MAAQ,QAUvB,OANAG,qBAAU,WACJtB,EAAQG,UACVwN,MAED,IAGD,6BACE,kBAAC,EAAD,CACErK,QAASA,EACTI,OAAQ,WACNgK,KAEFtK,SAAU,WAEJ4K,GAAahO,EAAQqL,iBACvBxH,EAAK,wBAAyB7D,EAAQqL,eAAelK,MAClDuD,MAAK,SAAA4C,GACJzC,EAAA,EAAaoJ,QAAQ,CAAE7L,QAAS,2BAAQ8C,SAAU,IAClDwI,IACAC,OAEDO,OAAM,SAAAC,GACLtJ,EAAA,EAAaC,MAAM,CACjB1C,QAAS,2BACT8C,SAAU,SAMpB,kBAAC,GAAD,OAEF,kBAAC,EAAD,CACEtE,MAAM,2BACNL,OAAQ,CACNvB,KAAM,2BACNyB,QAAS,WACPiN,QAIN,kBAAC,EAAD,KACE,2BACGtG,EAAItF,KAAI,SAAAiO,GAAO,OACd,kBAAC,GAAD,CACE/N,IAAK+N,EAAQhN,GACbA,GAAIgN,EAAQhN,GACZ+J,YAAaiD,EAAQ/Q,KACrBiO,SAAU8C,EAAQ9C,SAClBC,SAAU6C,EAAQ7C,SAClBzM,QAAS,SAAAyB,GACPxD,EAAM2P,QAAQN,KAAK,CACjBD,SAAU,gBACVD,MAAO3L,cT2BjBzC,SAAS,GAEX,CACEwP,KAAM,gBACNjQ,KAAM,2BACNmQ,UUtGO,SAAAzQ,GAAU,IAAD,EACQqC,oBAAS,GADjB,mBACfuC,EADe,KACNmK,EADM,OAEA1M,mBAAS,IAFT,mBAEfqG,EAFe,KAEVC,EAFU,KAIhBrH,EAAUC,qBAAWC,GACrBwN,EAAY,WAChBD,GAAYnK,IAGRqK,EAAO,WACXnL,QAAQC,IAAI/D,EAAMkP,SAASC,OAC3BzI,EAAI,iBAAkB,CAAErC,GAAIrE,EAAMkP,SAASC,MAAM9K,KAAM2B,MAAK,SAAA4C,GAC1D9E,QAAQC,IAAI6E,GACZD,EAAOC,EAAInG,MAAQ,QAYvB,OARAG,qBAAU,WACJ5C,EAAMkP,SAASC,OAAS7N,EAAQG,SAClCwN,IAEAjP,EAAM2P,QAAQN,KAAK,qBAEpB,IAGD,6BACE,kBAAC,EAAD,CACEzK,QAASA,EACTI,OAAQ,WACNgK,KAEFtK,SAAU,WACJ4K,GAAahO,EAAQ+L,eACvBlI,EAAK,sBAAD,eACC7D,EAAQ+L,aAAa5K,KADtB,CAEF4O,QAASrR,EAAMkP,SAASC,MAAM9K,MAE7B2B,MAAK,SAAA4C,GACJzC,EAAA,EAAaoJ,QAAQ,CAAE7L,QAAS,2BAAQ8C,SAAU,IAClDwI,IACAC,OAEDO,OAAM,SAAAC,GACLtJ,EAAA,EAAaC,MAAM,CACjB1C,QAAS,2BACT8C,SAAU,SAMpB,kBAAC,GAAD,OAEF,kBAAC,EAAD,CACEtE,MAAM,2BACNwN,OAAQ,WACN1P,EAAM2P,QAAQC,UAEhB/N,OAAQ,CACNvB,KAAM,2BACNyB,QAAS,WACPiN,QAIN,kBAAC,EAAD,KACE,2BACGtG,EAAItF,KAAI,SAAAkO,GAAK,OACZ,kBAAC,GAAD,CACEhO,IAAKgO,EAAMjN,GACXA,GAAIiN,EAAMjN,GACVqK,UAAW4C,EAAMhR,KACjBkO,SAAU8C,EAAM9C,SAChBzM,QAAS,SAAAyB,GACPxD,EAAM2P,QAAQN,KAAK,CACjBD,SAAU,gBACVD,MAAO3L,eV2BnB,CACE+M,KAAM,gBACNjQ,KAAM,2BACNmQ,UW5GO,SAAAzQ,GAAU,IAAD,EACQqC,oBAAS,GADjB,mBACfuC,EADe,KACNmK,EADM,OAEA1M,wBAAST,GAFT,mBAEf8G,EAFe,KAEVC,EAFU,KAGhBrH,EAAUC,qBAAWC,GACrBwN,EAAY,WAChBD,GAAYnK,IAGRqK,EAAO,WACXvI,EAAI,kBAAmB,CAAErC,GAAIrE,EAAMkP,SAASC,MAAM9K,KAAM2B,MAAK,SAAA4C,GAC3D9E,QAAQC,IAAI6E,GACZD,EAAOC,EAAInG,MAAQ,QAYvB,OARAG,qBAAU,WACJ5C,EAAMkP,SAASC,OAAS7N,EAAQG,SAClCwN,IAEAjP,EAAM2P,QAAQN,KAAK,qBAEpB,IAGD,6BACE,kBAAC,EAAD,CACEzK,QAASA,EACTI,OAAQ,WACNgK,KAEFtK,SAAU,WACJ4K,GAAahO,EAAQyL,eACvB5H,EAAK,sBAAD,eACC7D,EAAQyL,aAAatK,KADtB,CAEF6O,MAAOtR,EAAMkP,SAASC,MAAM9K,MAE3B2B,MAAK,SAAA4C,GACJzC,EAAA,EAAaoJ,QAAQ,CAAE7L,QAAS,2BAAQ8C,SAAU,IAClDwI,IACAC,OAEDO,OAAM,SAAAC,GACLtJ,EAAA,EAAaC,MAAM,CACjB1C,QAAS,2BACT8C,SAAU,SAMpB,kBAAC,GAAD,OAEF,kBAAC,EAAD,CACEtE,MAAM,2BACNwN,OAAQ,WACN1P,EAAM2P,QAAQC,UAEhB/N,OAAQ,CACNvB,KAAM,2BACNyB,QAAS,WACPiN,QAIN,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEvM,KAAMiG,EACN1E,QAAS,CACP,CACE9B,MAAO,2BACP2N,UAAW,QAEb,CACE3N,MAAO,eACP2N,UAAW,SAEb,CACE3N,MAAO,eACP4N,OAAQ,SAACC,EAAM3L,GACb,OACE,8BACE,uBACEtC,QAAS,WACPgC,QAAQC,IAAIK,KAFhB,gBAOA,uBAASnB,KAAK,aACd,uBACEnB,QAAS,WACP9B,EAAM2P,QAAQN,KAAK,CACjBD,SAAU,kBACVD,MAAO/K,MAJb,0BXqBd,CACEmM,KAAM,kBACNjQ,KAAM,2BACNmQ,UYlHO,SAAAzQ,GAAU,IAAD,EACQqC,oBAAS,GADjB,mBACfuC,EADe,KACNmK,EADM,OAEA1M,wBAAST,GAFT,mBAEf8G,EAFe,KAEVC,EAFU,KAGhBqG,EAAY,WAChBD,GAAYnK,IAkBd,OARAhC,qBAAU,WACJ5C,EAAMkP,SAASC,OACjBrL,QAAQC,IAAI,QARd2C,EAAI,mBAAoB,CAAErC,GAAIrE,EAAMkP,SAASC,MAAM9K,KAAM2B,MAAK,SAAA4C,GAC5D9E,QAAQC,IAAI6E,GACZD,EAAOC,EAAInG,MAAQ,QASnBzC,EAAM2P,QAAQN,KAAK,qBAEpB,CAACrP,IAEF,6BACE,kBAAC,EAAD,CACE4E,QAASA,EACTI,OAAQ,WACNgK,MAGF,kBAAC,GAAD,OAEF,kBAAC,EAAD,CACE9M,MAAM,2BACNL,OAAQ,CACNvB,KAAM,2BACNyB,QAAS,WACPiN,QAIN,kBAAC,EAAD,KACE,2BACE,kBAAC,EAAD,CACEvM,KAAMiG,EACN1E,QAAS,CACP,CACE9B,MAAO,eACP2N,UAAW,MAEb,CACE3N,MAAO,eACP2N,UAAW,QAEb,CACE3N,MAAO,eACP4N,OAAQ,SAACC,EAAM3L,GAAP,OACN,8BACE,uBACE8M,KAAK,IACLpP,QAAS,WACPgC,QAAQC,IAAIK,KAHhB,gCAYRjB,QAAS,CACP,CACEjB,MAAO,eACPH,QAAS,SAAAiP,GACPlN,QAAQC,IAAIiN,gBCrEf,qBAAM,kBAAC,IAAD,KAZA,SAAfO,EAAeC,GACnB,OAAOA,EAAapO,KAAI,SAAAqO,GACtB,GAAKA,EAAMd,OAEJ,CACL,IAAMe,EAAYH,EAAaE,EAAMd,QAErC,OAAO,YAAIe,GAJX,OAAO,kBAAC,IAAD,iBAAWD,EAAX,CAAkBnO,IAAKmO,EAAMlB,WASZgB,CAAajM,M,SCCnCqM,G,IAAAA,OAAQC,G,IAAAA,QAASC,G,IAAAA,OAAQC,G,IAAAA,MACzBC,G,IAAAA,QAEO,YAAA/R,GAEb,IAAMsB,EAAUC,qBAAWC,GACnBwQ,EAAqC1Q,EAArC0Q,UAAWvQ,EAA0BH,EAA1BG,SAAUwQ,EAAgB3Q,EAAhB2Q,YAHP,EAIY5P,oBAAS,GAJrB,mBAIf6P,EAJe,KAIJC,EAJI,OAKQ9P,oBAAS,GALjB,mBAKf+P,EALe,KAKNC,EALM,OAMMhQ,mBAASiQ,OAAOpD,SAASE,UAN/B,mBAMfmD,EANe,aAOJlQ,mBAASmQ,gBAApB7C,EAPe,oBAQtB/M,qBAAU,WACR0P,OAAOG,iBAAiB,SAAS,WAC/BJ,GAAW,MAGblN,EAAK,cACFa,MAAK,SAAA4C,IAC2B,KAA1BA,EAAI2G,UAAW,GAClB+C,OAAOI,cAAc,IAAIC,MAAM,UAE/BV,EAAYrJ,EAAInG,SAGnB+M,OAAM,SAAAC,GACLtJ,EAAA,EAAaC,MAAM,CACjB1C,QAAS,mDAAanD,KAAKiF,UAAUiK,GACrCjJ,SAAU,IAEZ8L,OAAOI,cAAc,IAAIC,MAAM,eAElC,IAmCH,OACE,uBAAQzS,MAAO,CAAEe,UAAW,UAC1B,kBAAC,EAAD,CACE2D,SAAUwN,IAAW,EACrBpN,OAAQ,kBAAMlB,QAAQC,IAAI,aAC1BW,SAAU,kBAlCF,kCAAAwC,EAAAC,OAAA,2EAAAD,EAAA,MAEmC/B,EAAK,cAAe,CAC/D4L,KAAMiB,EAAUvP,KAAK4B,GACrB8G,SAAU6G,EAAUvP,KAAK0I,YAJjB,oBAEFoE,eAFE,aAEe9M,YAFf,MAEsB,GAFtB,EAON8M,GACF0C,EAAYxP,GACZ0D,EAAA,EAAaoJ,QAAQ,CACnB7L,QAAS,2BACT8C,SAAU,IAEZ6L,GAAW,IAEXlM,EAAA,EAAaC,MAAM,CACjB1C,QAAS,2BACT2C,YAAa,yDACbG,SAAU,IAlBJ,kDAsBVL,EAAA,EAAaoJ,QAAQ,CACnB7L,QAASnD,KAAKiF,UAAL,MACTgB,SAAU,IAxBF,yDAkCQiG,KAEhB,kBAAC,GAAD,OAEF,kBAACqF,GAAD,CAAOc,aAAW,EAACV,UAAWA,EAAWW,WA1C1B,SAAAX,GACjBC,EAAaD,KA0CT,yBACEjS,UAAU,OACV6B,QAAS,WACP6N,EAAQN,KAAK,CACXD,SAAU,IACVD,MAAO1N,OAKb,uBACEqR,MAAM,OACNC,gBAAiB,CAAC,OAAQ,UAAW,eAAgB,gBACrDC,oBAAqB,CAACT,GACtB1M,KAAK,UAEJoN,GAAY7P,KAAI,SAAAqO,GACf,OAAKA,EAAMd,OAaP,kBAACoB,GAAD,CACEzO,IAAKmO,EAAMlB,KACXrO,MACE,8BACGuP,EAAMjB,MAAQ,uBAAMvN,KAAMwO,EAAMjB,OACjC,8BAAOiB,EAAMnR,QAIhBmR,EAAMd,OAAOvN,KAAI,SAAAsO,GAChB,OACwB,IAAtBA,EAAU3Q,SACR,sBAAMmS,KAAN,CAAW5P,IAAKoO,EAAUnB,MACxB,kBAAC,KAAD,CAAM4C,GAAIzB,EAAUnB,MAAOmB,EAAUpR,YAxB7B,IAAlBmR,EAAM1Q,SACJ,sBAAMmS,KAAN,CAAW5P,IAAKmO,EAAMlB,MACpB,kBAAC,KAAD,CAAM4C,GAAI1B,EAAMlB,MACbkB,EAAMjB,MAAQ,uBAAMvN,KAAMwO,EAAMjB,OACjC,8BAAOiB,EAAMnR,aA+B7B,uBACEJ,MAAO,CACLa,QAAS,OACTC,cAAe,WAGjB,kBAAC,GAAD,CACEd,MAAO,CACLiB,KAAM,EACNc,WAAY,0BACZE,QAAS,EACTiR,MAAO,oBACPrS,QAAS,OACTC,cAAe,gBAGjB,yBACEd,MAAO,CACLmT,SAAU,WACVC,MAAO,SAGR7R,EAASnB,MAAQ,KAGtB,kBAACsR,GAAD,CAAS1R,MAAO,CAAEqT,OAAQ,cAAepS,KAAM,IAC7C,yBACEjB,MAAO,CACLiC,QAAS,GACTF,WAAY,8BACZuR,OAAQ,SAGV,kBAAC,GAAD,QAGJ,kBAAC3B,GAAD,CAAQ3R,MAAO,CAAEuT,UAAW,SAAUtS,KAAM,IAA5C,8DCpHRuS,IAAS5D,OAAO,mBAzDE,WAAO,IAAD,EACgBzN,mBAAS,IADzB,mBACf2P,EADe,KACJ2B,EADI,OAEUtR,mBAAS,IAFnB,mBAEfZ,EAFe,KAELwQ,EAFK,OAGQ5P,mBAAS,IAHjB,gCAI0BA,mBAAS,KAJnC,mBAIfsK,EAJe,KAICiH,EAJD,OAK0BvR,mBAAS,IALnC,mBAKfwK,EALe,KAKCgH,EALD,OAMsBxR,mBAAS,IAN/B,mBAMf0K,EANe,KAMD+G,EANC,OAOwBzR,mBAAS,IAPjC,mBAOf4K,EAPe,KAOA8G,EAPA,OAQoB1R,mBAAS,IAR7B,mBAQf8K,EARe,KAQF6G,EARE,OASsB3R,mBAAS,IAT/B,mBASfgL,EATe,KASD4G,EATC,OAUsB5R,mBAAS,IAV/B,mBAUfkL,EAVe,KAUD2G,EAVC,OAWsB7R,mBAAS,IAX/B,mBAWf8R,EAXe,KAWDC,EAXC,OAY4B/R,mBAAS,IAZrC,mBAYfoL,EAZe,KAYE4G,EAZF,OAa0BhS,mBAAS,IAbnC,mBAafsL,EAbe,KAaC2G,EAbD,QAc0BjS,mBAAS,IAdnC,qBAcfwL,GAde,MAcC0G,GAdD,SAe8BlS,mBAAS,IAfvC,qBAef0L,GAfe,MAeGyG,GAfH,MAiBtB,OACE,kBAAC,EAAQC,SAAT,CACEzN,MAAO,CACLgL,YACA2B,mBACAlS,WACAwQ,cACAtF,iBACAiH,wBACA/G,iBACAgH,wBACA9G,eACA+G,sBACA7G,gBACA8G,uBACA5G,cACA6G,qBACA3G,eACA4G,sBACA1G,eACA2G,sBACAC,eACAC,sBACA3G,kBACA4G,yBACA1G,iBACA2G,wBACAzG,kBACA0G,yBACAxG,oBACAyG,6BAGF,kBAAC,KAAD,KACE,kBAAC,GAAD,UAMQ,MAAeE,SAASC,eAAe,W","file":"static/js/main.d40d0a49.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default React.createContext({});\r\n","import React from \"react\";\r\nimport \"./index.less\";\r\n\r\nimport { Avatar } from \"antd\";\r\nexport default props => {\r\n  return (\r\n    <div className=\"usercard\">\r\n      <Avatar\r\n        style={{ verticalAlign: \"middle\", fontSize: 128 }}\r\n        size={props.size || 128}\r\n      >\r\n        {props.name || \"欢迎\"}\r\n      </Avatar>\r\n      <h2>{props.name || \"\"}</h2>\r\n      <h3>\r\n        <label>\r\n          {JSON.parse(props.privilege || \"[]\") instanceof Array &&\r\n            JSON.parse(props.privilege || \"[]\").length > 0 &&\r\n            \"权限：\"}\r\n        </label>\r\n        {JSON.parse(props.privilege || \"[]\").join(\" \")}\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport Context from \"../context\";\r\nimport UserInfo from \"../components/UserInfo\";\r\n\r\nconst styles = {\r\n  home: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"100%\"\r\n  },\r\n  main: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }\r\n};\r\n\r\nexport default props => {\r\n  const context = useContext(Context);\r\n  return (\r\n    <div style={styles.home}>\r\n      <div style={styles.main}>\r\n        <UserInfo {...(context.userInfo || {})} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport \"./index.less\";\r\n\r\nimport { PageHeader, Button } from \"antd\";\r\nexport default props => {\r\n  let nextProps = {\r\n    ...props,\r\n    extra:\r\n      props.action !== undefined ? (\r\n        <Button onClick={props.action.handler}>{props.action.name}</Button>\r\n      ) : (\r\n        undefined\r\n      )\r\n  };\r\n  return (\r\n    <PageHeader\r\n      style={{\r\n        border: \"1px solid var(--background-color)\",\r\n        background: \"var(--background-color)\"\r\n      }}\r\n      title={props.title || \"Title\"}\r\n      {...nextProps}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./index.less\";\r\nimport { Row } from \"antd\";\r\n\r\nexport default props => {\r\n  return (\r\n    <Row\r\n      className=\"container\"\r\n      style={{\r\n        padding: 16\r\n      }}\r\n    >\r\n      {props.children}\r\n    </Row>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./index.less\";\r\nimport { Table, Button, Alert } from \"antd\";\r\n\r\nexport default props => {\r\n  let [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  let [loading, setLoading] = useState(!Boolean(props.data));\r\n  useEffect(() => {\r\n    let timer;\r\n    if (!props.data) {\r\n      timer = setTimeout(() => {\r\n        setLoading(false);\r\n      }, 3000);\r\n    } else {\r\n      clearInterval(timer);\r\n      setLoading(false);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [props.data]);\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: 16 }} className=\"actions\">\r\n        <div>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setSelectedRowKeys([]);\r\n            }}\r\n            disabled={setSelectedRowKeys.length === 0}\r\n            loading={loading}\r\n          >\r\n            清除选择\r\n          </Button>\r\n          {(props.actions || []).map((action, index) => (\r\n            <Button\r\n              loading={loading}\r\n              onClick={() =>\r\n                action.handler(\r\n                  selectedRowKeys.map(key =>\r\n                    props.data.find(item => item.key === key)\r\n                  )\r\n                )\r\n              }\r\n              key={index}\r\n            >\r\n              {action.title}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n\r\n        {selectedRowKeys.length > 0 && (\r\n          <Alert\r\n            style={{ marginTop: 16 }}\r\n            message={`你已选择${selectedRowKeys.length}项`}\r\n            type=\"info\"\r\n            className=\"selectedInfo\"\r\n          />\r\n        )}\r\n      </div>\r\n      <Table\r\n        loading={loading}\r\n        rowSelection={{\r\n          selectedRowKeys,\r\n          onChange: nextSelected => {\r\n            console.log(\"selectedRowKeys changed: \", nextSelected);\r\n            setSelectedRowKeys(nextSelected);\r\n          }\r\n        }}\r\n        columns={props.columns || []}\r\n        dataSource={props.data || []}\r\n        pagination={false}\r\n        rowKey={record => record.id}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\n\r\nexport default class Pop extends React.Component {\r\n  state = {\r\n    ModalText: \"Content of the modal\",\r\n    confirmLoading: false\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({\r\n      confirmLoading: true\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        visible: false,\r\n        confirmLoading: false\r\n      });\r\n    }, 2000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { confirmLoading } = this.state;\r\n    return (\r\n      <div>\r\n        <Modal\r\n          title=\"请填写表单\"\r\n          visible={this.props.visible}\r\n          onOk={this.props.handleOk || this.props.doHide}\r\n          confirmLoading={confirmLoading}\r\n          onCancel={this.props.doHide || this.handleCancel}\r\n        >\r\n          {this.props.children}\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default {\r\n  suffix: `http://129.204.218.96:4000`\r\n  // suffix: 'http://penguin.termina.linux.test:4000'\r\n};\r\n","import { notification } from \"antd\";\r\nimport { encode } from \"querystring\";\r\nimport config from \"../config\";\r\n\r\nexport const POST = function(url, data = {}) {\r\n  // Default options are marked with *\r\n  return fetch(config.suffix + url, {\r\n    body: JSON.stringify(data), // must match 'Content-Type' header\r\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"include\", // include, same-origin, *omit\r\n    headers: {\r\n      \"content-type\": \"application/json\"\r\n      // \"content-type\": \"application/x-www-form-urlencoded\"\r\n    },\r\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n    mode: \"cors\", // no-cors, cors, *same-origin\r\n    redirect: \"follow\", // manual, *follow, error\r\n    referrer: \"no-referrer\" // *client, no-referrer\r\n  }).then(function(response) {\r\n    if (!response.ok) {\r\n      notification.error({\r\n        message: `请求接口 ${url} 失败`,\r\n        description: `${response.status}: ${response.statusText}`,\r\n        duration: 2\r\n      });\r\n    }\r\n    return response.json();\r\n  });\r\n};\r\n\r\nexport const GET = function(url, data = {}) {\r\n  // Default options are marked with *\r\n  return fetch(config.suffix + url + \"?\" + encode(data), {\r\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"include\", // include, same-origin, *omit\r\n    headers: {\r\n      \"user-agent\": \"Mozilla/4.0 MDN Example\",\r\n      \"content-type\": \"application/x-www-form-urlencoded\"\r\n    },\r\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.\r\n    mode: \"cors\", // no-cors, cors, *same-origin\r\n    redirect: \"follow\", // manual, *follow, error\r\n    referrer: \"no-referrer\" // *client, no-referrer\r\n  }).then(function(response) {\r\n    if (!response.ok) {\r\n      notification.error({\r\n        message: `请求接口 ${url} 失败`,\r\n        description: `${response.status}: ${response.statusText}`,\r\n        duration: 2\r\n      });\r\n    }\r\n    return response.json();\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { Tree } from \"antd\";\r\n\r\nimport \"./StudentSelector.less\";\r\nimport { GET } from \"../../../lib/fetch\";\r\n\r\nconst { TreeNode } = Tree;\r\n\r\nexport default class StudentSelector extends React.Component {\r\n  state = {\r\n    treeData: [],\r\n    checkedKeys: [],\r\n    value: []\r\n  };\r\n\r\n  getData = async (\r\n    stage = 0,\r\n    treeNode = {\r\n      props: {}\r\n    }\r\n  ) => {\r\n    let queryPayload = {};\r\n    const api = [\r\n      \"/school/colleges\",\r\n      \"/school/majors\",\r\n      \"/school/classes\",\r\n      \"/school/students\"\r\n    ];\r\n    queryPayload.id = treeNode.props.eventKey;\r\n    const { data } = await GET(api[stage], queryPayload);\r\n    console.log(stage, stage === 3);\r\n    return data.map(item => ({\r\n      title: item.name,\r\n      key: item.id,\r\n      checkable: stage === 3,\r\n      stage: stage + 1,\r\n      isLeaf: stage === 3\r\n    }));\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.getData().then(data => {\r\n      console.log(data);\r\n      this.setState({\r\n        treeData: [...data]\r\n      });\r\n    });\r\n  }\r\n\r\n  onLoadData = async treeNode =>\r\n    new Promise(resolve => {\r\n      if (treeNode.props.children) {\r\n        resolve();\r\n        return;\r\n      }\r\n      this.getData(treeNode.props.stage, treeNode).then(children => {\r\n        treeNode.props.dataRef.children = children;\r\n        console.log(treeNode);\r\n        this.setState({\r\n          treeData: [...this.state.treeData]\r\n        });\r\n        resolve();\r\n      });\r\n    });\r\n\r\n  onCheck = checkedKeys => {\r\n    console.log(\"onCheck\", checkedKeys, this.state.expandedKeys);\r\n\r\n    this.setState(\r\n      {\r\n        checkedKeys,\r\n        value: checkedKeys.filter(\r\n          item => this.state.expandedKeys.indexOf(item) < 0\r\n        )\r\n      },\r\n      () => {\r\n        (this.props.onChange || (() => {}))(this.props.name, this.state.value);\r\n      }\r\n    );\r\n  };\r\n\r\n  onExpand = expandedKeys => {\r\n    console.log(\"onExpand\", expandedKeys);\r\n    this.setState({\r\n      expandedKeys,\r\n      autoExpandParent: false\r\n    });\r\n  };\r\n\r\n  renderTreeNodes = data =>\r\n    data.map(item => {\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode\r\n            {...item}\r\n            dataRef={item}\r\n            checkable={item.checkable || item.stage === 3}\r\n          >\r\n            {/* <TreeNode title={item.title} key={item.key} dataRef={item} > */}\r\n            {this.renderTreeNodes(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n      // console.log(\"else\");\r\n      return <TreeNode key={item.key} {...item} dataRef={item} />;\r\n    });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tree\r\n          checkable\r\n          loadData={this.onLoadData}\r\n          onCheck={this.onCheck}\r\n          checkedKeys={this.state.checkedKeys}\r\n          onExpand={this.onExpand}\r\n        >\r\n          {this.renderTreeNodes(this.state.treeData)}\r\n        </Tree>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Tree } from \"antd\";\r\n\r\nimport { GET } from \"../../../lib/fetch\";\r\n\r\nconst { TreeNode } = Tree;\r\n\r\nexport default class QuestionSelector extends React.Component {\r\n  state = {\r\n    treeData: [],\r\n    checkedKeys: [],\r\n    value: []\r\n  };\r\n\r\n  getData = async (\r\n    stage = 0,\r\n    treeNode = {\r\n      props: {}\r\n    }\r\n  ) => {\r\n    let queryPayload = {};\r\n    const api = [\r\n      \"/educational/subjects\",\r\n      \"/educational/chapters\",\r\n      \"/educational/questions\"\r\n    ];\r\n    queryPayload.id = treeNode.props.eventKey;\r\n    const { data } = await GET(api[stage], {\r\n      ...queryPayload,\r\n      ...this.props.options\r\n    });\r\n    return data.map(item => ({\r\n      title: item.title || item.name,\r\n      key: item.id,\r\n      checkable: stage === 2,\r\n      stage: stage + 1,\r\n      isLeaf: stage === 2\r\n    }));\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.getData().then(data => {\r\n      this.setState({\r\n        treeData: [...data]\r\n      });\r\n    });\r\n  }\r\n\r\n  onLoadData = async treeNode =>\r\n    new Promise(resolve => {\r\n      if (treeNode.props.children) {\r\n        resolve();\r\n        return;\r\n      }\r\n      this.getData(treeNode.props.stage, treeNode).then(children => {\r\n        treeNode.props.dataRef.children = children;\r\n        this.setState({\r\n          treeData: [...this.state.treeData]\r\n        });\r\n        resolve();\r\n      });\r\n    });\r\n\r\n  onCheck = checkedKeys => {\r\n    this.setState(\r\n      {\r\n        checkedKeys,\r\n        value: checkedKeys.filter(\r\n          item => this.state.expandedKeys.indexOf(item) < 0\r\n        )\r\n      },\r\n      () => {\r\n        (this.props.onChange || (() => {}))(this.props.name, this.state.value);\r\n      }\r\n    );\r\n  };\r\n\r\n  onExpand = expandedKeys => {\r\n    this.setState({\r\n      expandedKeys,\r\n      autoExpandParent: false\r\n    });\r\n  };\r\n\r\n  renderTreeNodes = data =>\r\n    data.map(item => {\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode\r\n            {...item}\r\n            dataRef={item}\r\n            checkable={item.checkable || item.stage === 2}\r\n          >\r\n            {/* <TreeNode title={item.title} key={item.key} dataRef={item} > */}\r\n            {this.renderTreeNodes(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n      return <TreeNode key={item.key} {...item} dataRef={item} />;\r\n    });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tree\r\n          checkable\r\n          disabled={this.props.disabled}\r\n          loadData={this.onLoadData}\r\n          onCheck={this.onCheck}\r\n          checkedKeys={this.state.checkedKeys}\r\n          onExpand={this.onExpand}\r\n        >\r\n          {this.renderTreeNodes(this.state.treeData)}\r\n        </Tree>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { GET } from \"../../../lib/fetch\";\r\nconst { Option } = Select;\r\n\r\nexport default props => {\r\n  const [raw, setRaw] = useState([]);\r\n\r\n  const onChange = value => {\r\n    props.onChange(props.name, value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    GET(\"/educational/subjects\").then(res => {\r\n      // console.log(res);\r\n      setRaw(res.data || []);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Select\r\n      disabled={props.disabled}\r\n      showSearch\r\n      style={{ width: \"100%\" }}\r\n      placeholder=\"选择学科\"\r\n      optionFilterProp=\"children\"\r\n      onChange={onChange}\r\n      filterOption={(input, option) =>\r\n        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      {raw.map(item => (\r\n        <Option value={item.id} key={item.id}>\r\n          {item.name}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { GET } from \"../../../lib/fetch\";\r\nconst { Option } = Select;\r\n\r\nexport default props => {\r\n  const [raw, setRaw] = useState([]);\r\n\r\n  const onChange = value => {\r\n    props.onChange(props.name, value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    GET(\"/examination/papers\").then(res => {\r\n      // console.log(res);\r\n      setRaw(res.data || []);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Select\r\n      disabled={props.disabled}\r\n      showSearch\r\n      style={{ width: \"100%\" }}\r\n      placeholder=\"选择试卷\"\r\n      optionFilterProp=\"children\"\r\n      onChange={onChange}\r\n      filterOption={(input, option) =>\r\n        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      {raw.map(item => (\r\n        <Option value={item.id} key={item.id}>\r\n          {item.name}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Tree } from \"antd\";\r\n\r\nimport \"./StudentSelector.less\";\r\nimport { GET } from \"../../../lib/fetch\";\r\n\r\nconst { TreeNode } = Tree;\r\n\r\nexport default class StudentSelector extends React.Component {\r\n  state = {\r\n    treeData: [],\r\n    checkedKeys: [],\r\n    value: []\r\n  };\r\n\r\n  getData = async (\r\n    stage = 0,\r\n    treeNode = {\r\n      props: {}\r\n    }\r\n  ) => {\r\n    let queryPayload = {};\r\n    const api = [\r\n      \"/educational/subjects\",\r\n      \"/educational/courses\",\r\n      // #TODO 改成educational的\r\n      \"/educational/students\"\r\n    ];\r\n    queryPayload.id = treeNode.props.eventKey;\r\n    const { data } = await GET(api[stage], queryPayload);\r\n    return data.map(item => ({\r\n      title: item.name,\r\n      key: stage === 2 ? item.UserUuid : item.id,\r\n      checkable: stage === 2,\r\n      stage: stage + 1,\r\n      isLeaf: stage === 2\r\n    }));\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.getData().then(data => {\r\n      this.setState({\r\n        treeData: [...data]\r\n      });\r\n    });\r\n  }\r\n\r\n  onLoadData = async treeNode =>\r\n    new Promise(resolve => {\r\n      if (treeNode.props.children) {\r\n        resolve();\r\n        return;\r\n      }\r\n      this.getData(treeNode.props.stage, treeNode).then(children => {\r\n        treeNode.props.dataRef.children = children;\r\n        this.setState({\r\n          treeData: [...this.state.treeData]\r\n        });\r\n        resolve();\r\n      });\r\n    });\r\n\r\n  onCheck = checkedKeys => {\r\n    this.setState(\r\n      {\r\n        checkedKeys,\r\n        value: {\r\n          students: checkedKeys.filter(\r\n            item => this.state.expandedKeys.indexOf(item) < 0\r\n          ),\r\n          courses: checkedKeys.filter(\r\n            item => this.state.expandedKeys.indexOf(item) >= 0\r\n          )\r\n        }\r\n      },\r\n      () => {\r\n        (this.props.onChange || (() => {}))(this.props.name, this.state.value);\r\n      }\r\n    );\r\n  };\r\n\r\n  onExpand = expandedKeys => {\r\n    this.setState({\r\n      expandedKeys,\r\n      autoExpandParent: false\r\n    });\r\n  };\r\n\r\n  renderTreeNodes = data =>\r\n    data.map(item => {\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode\r\n            {...item}\r\n            dataRef={item}\r\n            checkable={item.checkable || item.stage === 2}\r\n          >\r\n            {/* <TreeNode title={item.title} key={item.key} dataRef={item} > */}\r\n            {this.renderTreeNodes(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n      return <TreeNode key={item.key} {...item} dataRef={item} />;\r\n    });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tree\r\n          checkable\r\n          loadData={this.onLoadData}\r\n          onCheck={this.onCheck}\r\n          checkedKeys={this.state.checkedKeys}\r\n          onExpand={this.onExpand}\r\n        >\r\n          {this.renderTreeNodes(this.state.treeData)}\r\n        </Tree>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { GET } from \"../../../lib/fetch\";\r\nconst { Option } = Select;\r\n\r\nexport default props => {\r\n  const [raw, setRaw] = useState([]);\r\n\r\n  const onChange = value => {\r\n    props.onChange(props.name, value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    GET(\"/educational/teachers\").then(res => {\r\n      // console.log(res);\r\n      setRaw(res.data || []);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Select\r\n      disabled={props.disabled}\r\n      showSearch\r\n      style={{ width: \"100%\" }}\r\n      placeholder=\"选择教师\"\r\n      optionFilterProp=\"children\"\r\n      onChange={onChange}\r\n      filterOption={(input, option) =>\r\n        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      {raw.map(item => (\r\n        <Option value={item.UserUuid} key={item.id}>\r\n          {item.name}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useImperativeHandle\r\n} from \"react\";\r\nimport FormRender from \"form-render/lib/antd\";\r\nimport { notification } from \"antd\";\r\nimport Context from \"../../context\";\r\n\r\nimport StudentSelector from \"./components/StudentSelector\";\r\nimport QuestionSelector from \"./components/QuestionSelector\";\r\nimport SubjectSelector from \"./components/SubjectSelector\";\r\nimport PaperSelector from \"./components/PaperSelector\";\r\nimport CourseSelector from \"./components/CourseSelector\";\r\nimport TeacherSelector from \"./components/TeacherSelector\";\r\n\r\nexport default React.forwardRef((props, ref) => {\r\n  const [formData, setData] = useState({});\r\n  const [valid, setValid] = useState([]);\r\n  const context = useContext(Context);\r\n  const onSubmit = () => {\r\n    // valid 是校验判断的数组，valid 长度为 0 代表校验全部通过\r\n    if (valid.length > 0) {\r\n      notification.warn({ message: `校验未通过字段：${valid.toString()}` });\r\n    }\r\n    return [valid.length === 0, formData];\r\n  };\r\n  useImperativeHandle(ref, () => ({\r\n    submit: onSubmit\r\n  }));\r\n\r\n  useEffect(() => {\r\n    context[\"update_\" + (props.formName || \"login\")]({\r\n      data: formData,\r\n      valid\r\n    });\r\n    // console.log(context, formData);\r\n  }, [formData, valid]);\r\n\r\n  return (\r\n    <FormRender\r\n      propsSchema={props.schema}\r\n      // uiSchema={uiSchema}\r\n      formData={formData}\r\n      onChange={setData}\r\n      onValidate={setValid}\r\n      widgets={{\r\n        studentSelector: StudentSelector,\r\n        questionSelector: QuestionSelector,\r\n        subjectSelector: SubjectSelector,\r\n        paperSelector: PaperSelector,\r\n        courseSelector: CourseSelector,\r\n        teacherSelector: TeacherSelector\r\n      }}\r\n    />\r\n  );\r\n});\r\n","export default {\r\n  type: \"object\",\r\n  properties: {\r\n    id: {\r\n      title: \"登录id\",\r\n      type: \"string\"\r\n    },\r\n    password: {\r\n      title: \"登录密码\",\r\n      type: \"string\",\r\n      format: \"password\"\r\n    }\r\n  }\r\n};\r\n","export default {\r\n  type: \"object\",\r\n  properties: {\r\n    name: {\r\n      title: \"学院名称\",\r\n      type: \"string\"\r\n      // \"ui:width\": \"50%\" // uiSchema 可以合并到 propsSchema 中（推荐写法，书写便捷）\r\n    }\r\n    // select: {\r\n    //   title: \"单选\",\r\n    //   type: \"string\",\r\n    //   enum: [\"a\", \"b\", \"c\"]\r\n    // }\r\n  }\r\n};\r\n","export default {\r\n  type: \"object\",\r\n  properties: {\r\n    name: {\r\n      title: \"章节名称\",\r\n      type: \"string\"\r\n      // \"ui:width\": \"50%\" // uiSchema 可以合并到 propsSchema 中（推荐写法，书写便捷）\r\n    }\r\n    // select: {\r\n    //   title: \"单选\",\r\n    //   type: \"string\",\r\n    //   enum: [\"a\", \"b\", \"c\"]\r\n    // }\r\n  }\r\n};\r\n","export default {\r\n  type: \"object\",\r\n  properties: {\r\n    name: {\r\n      title: \"班级名称\",\r\n      type: \"string\"\r\n      // \"ui:width\": \"50%\" // uiSchema 可以合并到 propsSchema 中（推荐写法，书写便捷）\r\n    }\r\n    // select: {\r\n    //   title: \"单选\",\r\n    //   type: \"string\",\r\n    //   enum: [\"a\", \"b\", \"c\"]\r\n    // }\r\n  }\r\n};\r\n","export default {\r\n  type: \"object\",\r\n  properties: {\r\n    name: {\r\n      title: \"课程名称\",\r\n      type: \"string\"\r\n      // \"ui:width\": \"50%\" // uiSchema 可以合并到 propsSchema 中（推荐写法，书写便捷）\r\n    },\r\n    studentList: {\r\n      title: \"选择学生\",\r\n      type: \"array\",\r\n      \"ui:widget\": \"studentSelector\"\r\n    },\r\n    teacher: {\r\n      title: \"负责教师\",\r\n      type: \"string\",\r\n      \"ui:widget\": \"teacherSelector\"\r\n    }\r\n    // select: {\r\n    //   title: \"单选\",\r\n    //   type: \"string\",\r\n    //   enum: [\"a\", \"b\", \"c\"]\r\n    // }\r\n  }\r\n};\r\n","export default {\r\n  type: \"object\",\r\n  properties: {\r\n    name: {\r\n      title: \"测验名称\",\r\n      type: \"string\"\r\n      // \"ui:width\": \"50%\" // uiSchema 可以合并到 propsSchema 中（推荐写法，书写便捷）\r\n    },\r\n    type: {\r\n      title: \"类型\",\r\n      type: \"string\",\r\n      enum: [\"true\", \"false\"],\r\n      enumNames: [\"大考\", \"小练习\"]\r\n    },\r\n    startAt: {\r\n      title: \"开始时间\",\r\n      type: \"string\",\r\n      format: \"dateTime\"\r\n    },\r\n    endAt: {\r\n      title: \"结束时间\",\r\n      type: \"string\",\r\n      format: \"dateTime\"\r\n    },\r\n    paperId: {\r\n      title: \"选择试卷\",\r\n      type: \"string\",\r\n      \"ui:widget\": \"paperSelector\"\r\n    },\r\n    range: {\r\n      title: \"选择参考范围\",\r\n      type: \"string\",\r\n      \"ui:widget\": \"courseSelector\"\r\n    }\r\n  }\r\n};\r\n","export default {\r\n  type: \"object\",\r\n  properties: {\r\n    name: {\r\n      title: \"专业名称\",\r\n      type: \"string\"\r\n      // \"ui:width\": \"50%\" // uiSchema 可以合并到 propsSchema 中（推荐写法，书写便捷）\r\n    }\r\n    // select: {\r\n    //   title: \"单选\",\r\n    //   type: \"string\",\r\n    //   enum: [\"a\", \"b\", \"c\"]\r\n    // }\r\n  }\r\n};\r\n","export default {\r\n  type: \"object\",\r\n  properties: {\r\n    name: {\r\n      title: \"试卷名称\",\r\n      type: \"string\"\r\n    },\r\n    chapter: {\r\n      title: \"使用学科\",\r\n      type: \"string\",\r\n      \"ui:widget\": \"subjectSelector\"\r\n    },\r\n    forExam: {\r\n      title: \"用于正式考试\",\r\n      type: \"boolean\"\r\n    },\r\n    singleNum: {\r\n      title: \"单选题目数\",\r\n      type: \"number\",\r\n      default: 0\r\n    },\r\n    singleList: {\r\n      title: \"单选题范围选择\",\r\n      type: \"array\",\r\n      \"ui:disabled\": (formData, rootValue) => formData.singleNum <= 0,\r\n      \"ui:widget\": \"questionSelector\",\r\n      \"ui:options\": {\r\n        type: \"single\"\r\n      },\r\n      default: []\r\n    },\r\n    multiNum: {\r\n      title: \"多选题目数\",\r\n      type: \"number\",\r\n      default: 0\r\n    },\r\n    multiList: {\r\n      title: \"多选题范围选择\",\r\n      type: \"array\",\r\n      \"ui:disabled\": formData => formData.multiNum <= 0,\r\n      \"ui:widget\": \"questionSelector\",\r\n      \"ui:options\": {\r\n        type: \"multi\"\r\n      },\r\n      default: []\r\n    },\r\n    truefalseNum: {\r\n      title: \"判断题目数\",\r\n      type: \"number\",\r\n      default: 0\r\n    },\r\n    truefalseList: {\r\n      title: \"判断题范围选择\",\r\n      type: \"array\",\r\n      \"ui:disabled\": formData => formData.truefalseNum <= 0,\r\n      \"ui:widget\": \"questionSelector\",\r\n      \"ui:options\": {\r\n        type: \"trueFalse\"\r\n      },\r\n      default: []\r\n    }\r\n    // select: {\r\n    //   title: \"单选\",\r\n    //   type: \"string\",\r\n    //   enum: [\"a\", \"b\", \"c\"]\r\n    // }\r\n  }\r\n};\r\n","export default {\r\n  type: \"object\",\r\n  properties: {\r\n    id: {\r\n      title: \"上传excel文件\",\r\n      type: \"string\",\r\n      format: \"image\"\r\n    }\r\n    // select: {\r\n    //   title: \"单选\",\r\n    //   type: \"string\",\r\n    //   enum: [\"a\", \"b\", \"c\"]\r\n    // }\r\n  }\r\n};\r\n","export default {\r\n  type: \"object\",\r\n  properties: {\r\n    name: {\r\n      title: \"学科名称\",\r\n      type: \"string\"\r\n      // \"ui:width\": \"50%\" // uiSchema 可以合并到 propsSchema 中（推荐写法，书写便捷）\r\n    }\r\n    // studentList: {\r\n    //   title: \"学生选择\",\r\n    //   type: \"string\"\r\n    // }\r\n    // select: {\r\n    //   title: \"单选\",\r\n    //   type: \"string\",\r\n    //   enum: [\"a\", \"b\", \"c\"]\r\n    // }\r\n  }\r\n};\r\n","export default {\r\n  type: \"object\",\r\n  properties: {\r\n    name: {\r\n      title: \"教师名称\",\r\n      type: \"string\"\r\n      // \"ui:width\": \"50%\" // uiSchema 可以合并到 propsSchema 中（推荐写法，书写便捷）\r\n    },\r\n    id: {\r\n      title: \"登录id\",\r\n      type: \"string\"\r\n    },\r\n    password: {\r\n      title: \"登录密码\",\r\n      type: \"string\",\r\n      format: \"password\",\r\n      default: \"123456\"\r\n    }\r\n    // select: {\r\n    //   title: \"单选\",\r\n    //   type: \"string\",\r\n    //   enum: [\"a\", \"b\", \"c\"]\r\n    // }\r\n  }\r\n};\r\n","export default {\r\n  type: \"object\",\r\n  properties: {\r\n    id: {\r\n      title: \"上传excel文件\",\r\n      type: \"string\",\r\n      format: \"image\"\r\n    }\r\n  }\r\n};\r\n","import React, { useRef, useImperativeHandle, forwardRef } from \"react\";\r\nimport Form from \"./Form\";\r\n\r\nimport login from \"./schema/Login\";\r\nimport collegeCreator from \"./schema/CollegeCreator\";\r\nimport chapterCreator from \"./schema/ChapterCreator\";\r\nimport classCreator from \"./schema/ClassCreator\";\r\nimport courseCreator from \"./schema/CourseCreator\";\r\nimport examCreator from \"./schema/ExamCreator\";\r\nimport majorCreator from \"./schema/MajorCreator\";\r\nimport paperCreator from \"./schema/PaperCreator\";\r\nimport studentAdder from \"./schema/StudentAdder\";\r\nimport studentImporter from \"./schema/StudentImporter\";\r\nimport subjectCreator from \"./schema/SubjectCreator\";\r\nimport teacherCreator from \"./schema/TeacherCreator\";\r\nimport questionImporter from \"./schema/QuestionImporter\";\r\n\r\nexport const Login = () => <Form schema={login} formName=\"loginform\" />;\r\nexport const CollegeCreator = () => (\r\n  <Form schema={collegeCreator} formName=\"collegeCreator\" />\r\n);\r\nexport const ChapterCreator = () => (\r\n  <Form schema={chapterCreator} formName=\"chapterCreator\" />\r\n);\r\nexport const ClassCreator = () => (\r\n  <Form schema={classCreator} formName=\"classCreator\" />\r\n);\r\nexport const CourseCreator = () => (\r\n  <Form schema={courseCreator} formName=\"courseCreator\" />\r\n);\r\nexport const ExamCreator = () => (\r\n  <Form schema={examCreator} formName=\"examCreator\" />\r\n);\r\nexport const MajorCreator = () => (\r\n  <Form schema={majorCreator} formName=\"majorCreator\" />\r\n);\r\nexport const PaperCreator = () => (\r\n  <Form schema={paperCreator} formName=\"paperCreator\" />\r\n);\r\nexport const StudentAdder = () => (\r\n  <Form schema={studentAdder} formName=\"studentAdder\" />\r\n);\r\nexport const StudentImporter = () => (\r\n  <Form schema={studentImporter} formName=\"studentImporter\" />\r\n);\r\nexport const SubjectCreator = () => (\r\n  <Form schema={subjectCreator} formName=\"subjectCreator\" />\r\n);\r\nexport const TeacherCreator = () => (\r\n  <Form schema={teacherCreator} formName=\"teacherCreator\" />\r\n);\r\nexport const QuestionImporter = () => (\r\n  <Form schema={questionImporter} formName=\"questionImporter\" />\r\n);\r\n","import { notification } from \"antd\";\r\nexport default ({ data, valid }) => {\r\n  if (valid.length > 0) {\r\n    notification.error({\r\n      message: `请检查表单填写情况`,\r\n      duration: 2\r\n    });\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"./index.less\";\r\nimport { Card, Col, Button } from \"antd\";\r\n\r\nexport const CollegeCard = props => {\r\n  return (\r\n    <Col xs={24} sm={12} md={6}>\r\n      <Card\r\n        title={props.collegeName || \"College\"}\r\n        bordered={true}\r\n        style={{ maxWidth: 300 }}\r\n        actions={[\r\n          <Button onClick={() => (props.handler || (() => {}))(props)}>\r\n            查看\r\n          </Button>\r\n        ]}\r\n      >\r\n        {props.majorNum !== undefined && <p>专业数：{props.majorNum}</p>}\r\n        {props.classNum && <p>班级数：{props.classNum}</p>}\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport const MajorCard = props => {\r\n  return (\r\n    <Col xs={24} sm={12} md={6}>\r\n      <Card\r\n        // title={props.majorName || \"College\"}\r\n        bordered={true}\r\n        style={{ maxWidth: 300 }}\r\n        actions={[\r\n          <Button onClick={() => (props.handler || (() => {}))(props)}>\r\n            查看\r\n          </Button>\r\n        ]}\r\n      >\r\n        {props.majorName}\r\n        {props.classNum && <p>班级数：{props.classNum}</p>}\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport const SubjectCard = props => {\r\n  return (\r\n    <Col xs={24} sm={12} md={6}>\r\n      <Card\r\n        title={props.name || \"Subject\"}\r\n        bordered={true}\r\n        style={{ maxWidth: 300 }}\r\n        actions={[\r\n          <Button\r\n            onClick={() => {\r\n              const backUp = (...args) => {\r\n                console.log(args);\r\n              };\r\n              (props.handleCourse || backUp)(props);\r\n            }}\r\n          >\r\n            查看课程\r\n          </Button>,\r\n          <Button\r\n            onClick={() => {\r\n              const backUp = (...args) => {\r\n                console.log(args);\r\n              };\r\n              (props.handleChapter || backUp)(props);\r\n            }}\r\n          >\r\n            查看章节\r\n          </Button>\r\n        ]}\r\n      >\r\n        {props.majorNum !== undefined && <p>专业数：{props.majorNum}</p>}\r\n        {/* {props.questionNum && <p>题目数：{props.questionNum}</p>} */}\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport beforeSubmit from \"../../lib/beforeSubmit\";\r\nimport Context from \"../../context\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport SortTable from \"../../components/SortTable\";\r\nimport { Divider, Button, notification } from \"antd\";\r\nimport Pop from \"../../components/Pop\";\r\nimport { ExamCreator } from \"../../components/Form\";\r\nimport { GET, POST } from \"../../lib/fetch\";\r\n\r\nexport default props => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [raw, setRaw] = useState(undefined);\r\n  const context = useContext(Context);\r\n\r\n  const changePop = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const init = () => {\r\n    if (props.location.query) {\r\n      GET(\"/educational/exams\").then(res => {\r\n        console.log(res);\r\n        setRaw(res.data || []);\r\n      });\r\n    } else if (props.location.pathname === \"/examination/quiz\") {\r\n      GET(\"/educational/exams\").then(res => {\r\n        console.log(res);\r\n        setRaw(res.data || []);\r\n      });\r\n    } else {\r\n      props.location.push(\"/\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Pop\r\n        visible={visible}\r\n        doHide={() => {\r\n          changePop();\r\n        }}\r\n        handleOk={() => {\r\n          console.log(context.examCreator);\r\n          if (beforeSubmit(context.examCreator)) {\r\n            console.log(context.examCreator);\r\n            POST(\"/educational/createExam\", {\r\n              ...context.examCreator.data\r\n            })\r\n              .then(res => {\r\n                notification.success({ message: \"创建成功\", duration: 2 });\r\n                changePop();\r\n                init();\r\n              })\r\n              .catch(e => {\r\n                notification.error({\r\n                  message: \"创建出错\",\r\n                  duration: 2\r\n                });\r\n              });\r\n          }\r\n        }}\r\n      >\r\n        <ExamCreator />\r\n      </Pop>\r\n      <Header\r\n        title=\"测验管理\"\r\n        onBack={() => {\r\n          props.history.goBack();\r\n        }}\r\n        action={{\r\n          name: \"添加测验\",\r\n          handler: () => {\r\n            changePop();\r\n          }\r\n        }}\r\n      />\r\n      <Container>\r\n        <SortTable\r\n          columns={[\r\n            {\r\n              title: \"考试名称\",\r\n              dataIndex: \"name\"\r\n            },\r\n            {\r\n              title: \"人数\",\r\n              dataIndex: \"count\"\r\n            },\r\n            {\r\n              title: \"考试时间\",\r\n              render: (text, record) =>\r\n                `${new Date(record.startAt).toLocaleDateString()} ${new Date(\r\n                  record.startAt\r\n                ).toLocaleTimeString()}`\r\n            },\r\n            {\r\n              title: \"类型\",\r\n              dataIndex: \"type\",\r\n              filters: [\r\n                { text: \"未开始\", value: \"before\" },\r\n                { text: \"进行中\", value: \"active\" },\r\n                { text: \"已结束\", value: \"end\" }\r\n              ],\r\n              onFilter: (value, record) => record.name.includes(value)\r\n            },\r\n            {\r\n              title: \"状态\",\r\n              dataIndex: \"status\",\r\n              filters: [\r\n                { text: \"未开始\", value: \"before\" },\r\n                { text: \"进行中\", value: \"active\" },\r\n                { text: \"已结束\", value: \"end\" }\r\n              ],\r\n              onFilter: (value, record) => record.name.includes(value)\r\n            },\r\n            {\r\n              title: \"操作\",\r\n              render: (text, record) => {\r\n                return (\r\n                  <span>\r\n                    <Button\r\n                      onClick={() => {\r\n                        console.log(record);\r\n                      }}\r\n                    >\r\n                      编辑\r\n                    </Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button\r\n                      onClick={() => {\r\n                        props.history.push({\r\n                          pathname: \"/educational/examinfo\",\r\n                          query: record\r\n                        });\r\n                      }}\r\n                    >\r\n                      详情\r\n                    </Button>\r\n                  </span>\r\n                );\r\n              }\r\n            }\r\n          ]}\r\n          data={raw}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./index.less\";\r\nimport { Statistic, Row, Col } from \"antd\";\r\n\r\nexport default props =>\r\n  props.data ? (\r\n    <Row className=\"dataShower\">\r\n      {props.data.map((item, index) => (\r\n        <Col xs={12} sm={6} md={3} key={index}>\r\n          <Statistic value={item.value} title={item.title} />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  ) : null;\r\n","import Home from \"../pages/Home\";\r\n// Educational\r\nimport Teacher from \"../pages/educational/Teacher\";\r\nimport Subject from \"../pages/educational/Subject\";\r\nimport Course from \"../pages/educational/Course\";\r\nimport Exam from \"../pages/educational/Exam\";\r\nimport ExamInfo from \"../pages/educational/ExamInfo\";\r\nimport Chapter from \"../pages/educational/Chapter\";\r\nimport Question from \"../pages/educational/Question\";\r\nimport CourseStudent from \"../pages/educational/Student\";\r\n// Examination\r\n// import Quiz from \"../pages/examination/Quiz\";\r\nimport Paper from \"../pages/examination/Paper\";\r\n// School\r\nimport Classes from \"../pages/school/Classes\";\r\nimport College from \"../pages/school/College\";\r\nimport Major from \"../pages/school/Major\";\r\nimport Student from \"../pages/school/Student\";\r\n\r\nexport default [\r\n  {\r\n    exact: true,\r\n    path: \"/\",\r\n    name: \"首页\",\r\n    icon: \"desktop\",\r\n    component: Home\r\n  },\r\n  {\r\n    path: \"/instruction\",\r\n    name: \"教学管理\",\r\n    icon: \"desktop\",\r\n    component: Home\r\n  },\r\n  {\r\n    path: \"/educational\",\r\n    name: \"教务管理\",\r\n    icon: \"desktop\",\r\n    routes: [\r\n      {\r\n        path: \"/educational/teacher\",\r\n        component: Teacher,\r\n        name: \"教师管理\",\r\n        display: true\r\n      },\r\n      {\r\n        path: \"/educational/subject\",\r\n        component: Subject,\r\n        name: \"学科管理\",\r\n        display: true\r\n      },\r\n      {\r\n        path: \"/educational/course\",\r\n        component: Course,\r\n        name: \"课程管理\"\r\n      },\r\n      {\r\n        path: \"/educational/student\",\r\n        component: CourseStudent,\r\n        name: \"课程管理\"\r\n      },\r\n      {\r\n        path: \"/educational/exam\",\r\n        component: Exam,\r\n        name: \"测验管理\"\r\n      },\r\n      {\r\n        path: \"/educational/examinfo\",\r\n        component: ExamInfo,\r\n        name: \"考试信息\"\r\n      },\r\n      {\r\n        path: \"/educational/chapter\",\r\n        component: Chapter,\r\n        name: \"章节管理\"\r\n      },\r\n      {\r\n        path: \"/educational/question\",\r\n        component: Question,\r\n        name: \"题目管理\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: \"/examination\",\r\n    name: \"考务管理\",\r\n    icon: \"desktop\",\r\n    routes: [\r\n      {\r\n        path: \"/examination/quiz\",\r\n        name: \"测验管理\",\r\n        component: Exam,\r\n        display: true\r\n      },\r\n      {\r\n        path: \"/examination/paper\",\r\n        name: \"试卷管理\",\r\n        component: Paper,\r\n        display: true\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: \"/school\",\r\n    name: \"学籍管理\",\r\n    icon: \"mobile\",\r\n    routes: [\r\n      {\r\n        path: \"/school/college\",\r\n        name: \"学院一览\",\r\n        component: College,\r\n        display: true\r\n      },\r\n      {\r\n        path: \"/school/major\",\r\n        name: \"专业管理\",\r\n        component: Major\r\n      },\r\n      {\r\n        path: \"/school/class\",\r\n        name: \"班级管理\",\r\n        component: Classes\r\n      },\r\n      {\r\n        path: \"/school/student\",\r\n        name: \"学生管理\",\r\n        component: Student\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Row, Divider, Button, notification } from \"antd\";\r\nimport Context from \"../../context\";\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport SortTable from \"../../components/SortTable\";\r\nimport Pop from \"../../components/Pop\";\r\nimport { TeacherCreator } from \"../../components/Form\";\r\nimport { GET, POST } from \"../../lib/fetch\";\r\nimport beforeSubmit from \"../../lib/beforeSubmit\";\r\n\r\nexport default props => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [raw, setRaw] = useState(undefined);\r\n  const context = useContext(Context);\r\n  const changePop = () => {\r\n    setVisible(!visible);\r\n  };\r\n  useEffect(() => {\r\n    if (Object.keys(context.userInfo).length > 0) {\r\n      GET(\"/educational/teachers\", { id: 1 }).then(res => {\r\n        // console.log(res);\r\n        setRaw(res.data || []);\r\n      });\r\n    } else {\r\n      console.log(\"here\", context.userInfo);\r\n    }\r\n  }, [context.userInfo]);\r\n\r\n  const resetPassword = record => {\r\n    POST(\"/user/resetPassword\", record).then(res => {\r\n      console.log(res);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Pop\r\n        visible={visible}\r\n        doHide={() => {\r\n          if (beforeSubmit(context.teacherCreator)) {\r\n            POST(\"/educational/createTeacher\", context.teacherCreator.data)\r\n              .then(res => {\r\n                changePop();\r\n                notification.success({\r\n                  message: \"创建成功\"\r\n                });\r\n              })\r\n              .catch(e => {\r\n                notification.error({\r\n                  message: \"创建失败\",\r\n                  duration: 2\r\n                });\r\n              });\r\n          }\r\n        }}\r\n      >\r\n        <TeacherCreator />\r\n      </Pop>\r\n      <Header\r\n        title=\"教师管理\"\r\n        action={{\r\n          name: \"添加教师\",\r\n          handler: () => {\r\n            changePop();\r\n          }\r\n        }}\r\n      />\r\n      <Container>\r\n        <Row>\r\n          <SortTable\r\n            columns={[\r\n              {\r\n                title: \"工号\",\r\n                dataIndex: \"id\"\r\n              },\r\n              {\r\n                title: \"姓名\",\r\n                dataIndex: \"name\"\r\n              },\r\n              {\r\n                title: \"操作\",\r\n                render: (text, record) => (\r\n                  <span>\r\n                    <Button\r\n                      onClick={() => {\r\n                        resetPassword({ uuid: record.UserUuid });\r\n                      }}\r\n                    >\r\n                      重置密码\r\n                    </Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button\r\n                      onClick={() => {\r\n                        // console.log(record);\r\n                      }}\r\n                    >\r\n                      分配课程\r\n                    </Button>\r\n                  </span>\r\n                )\r\n              }\r\n            ]}\r\n            actions={[\r\n              {\r\n                title: \"提交\",\r\n                handler: selected => {\r\n                  console.log(selected);\r\n                }\r\n              }\r\n            ]}\r\n            data={raw}\r\n          />\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport beforeSubmit from \"../../lib/beforeSubmit\";\r\nimport Context from \"../../context\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport { SubjectCard } from \"../../components/Card\";\r\nimport Pop from \"../../components/Pop\";\r\nimport { SubjectCreator } from \"../../components/Form\";\r\nimport { GET, POST } from \"../../lib/fetch\";\r\nimport { notification } from \"antd\";\r\n\r\nexport default props => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [raw, setRaw] = useState([]);\r\n  const context = useContext(Context);\r\n\r\n  const changePop = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (context.userInfo) {\r\n      init();\r\n    }\r\n  }, []);\r\n\r\n  const handleCourse = item => {\r\n    props.history.push({ pathname: \"/educational/course\", query: item });\r\n  };\r\n  const handleChapter = item => {\r\n    props.history.push({ pathname: \"/educational/chapter\", query: item });\r\n  };\r\n\r\n  const init = () => {\r\n    GET(\"/educational/subjects\", { id: 1 }).then(res => {\r\n      // console.log(res);\r\n      setRaw(res.data || []);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Pop\r\n        visible={visible}\r\n        handleOk={() => {\r\n          // console.log(context.subjectCreator);\r\n          if (beforeSubmit(context.subjectCreator)) {\r\n            POST(\"/educational/createSubject\", context.subjectCreator.data)\r\n              .then(res => {\r\n                notification.success({ message: \"创建成功\", duration: 2 });\r\n                changePop();\r\n                init();\r\n              })\r\n              .catch(e => {\r\n                notification.error({\r\n                  message: \"创建出错\",\r\n                  duration: 2\r\n                });\r\n              });\r\n          }\r\n        }}\r\n        doHide={() => {\r\n          changePop();\r\n        }}\r\n      >\r\n        <SubjectCreator />\r\n      </Pop>\r\n      <Header\r\n        title=\"学科管理\"\r\n        action={{\r\n          name: \"添加学科\",\r\n          handler: () => {\r\n            changePop();\r\n          }\r\n        }}\r\n      />\r\n      <Container>\r\n        {raw.map(subject => (\r\n          <SubjectCard\r\n            id={subject.id}\r\n            key={subject.id}\r\n            name={subject.name}\r\n            // questionNum={subject.majorNum}\r\n            majorNum={subject.majorNum}\r\n            handleCourse={handleCourse}\r\n            handleChapter={handleChapter}\r\n          />\r\n        ))}\r\n\r\n        {/* <SubjectCard name=\"毛概\" questionNum={12} chapterNum={3} />\r\n        <SubjectCard name=\"马原\" questionNum={12} chapterNum={3} /> */}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport beforeSubmit from \"../../lib/beforeSubmit\";\r\nimport Context from \"../../context\";\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport SortTable from \"../../components/SortTable\";\r\nimport { Button, notification } from \"antd\";\r\nimport Pop from \"../../components/Pop\";\r\nimport { CourseCreator } from \"../../components/Form\";\r\nimport { GET, POST } from \"../../lib/fetch\";\r\n\r\nexport default props => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [raw, setRaw] = useState(undefined);\r\n\r\n  const context = useContext(Context);\r\n\r\n  const changePop = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const init = () => {\r\n    GET(\"/educational/courses\", { id: props.location.query.id }).then(res => {\r\n      console.log(res);\r\n      setRaw(res.data || []);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.location.query && context.userInfo) {\r\n      init();\r\n    } else {\r\n      props.history.push(\"/educational/subject\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Pop\r\n        visible={visible}\r\n        doHide={() => {\r\n          changePop();\r\n        }}\r\n        handleOk={() => {\r\n          if (beforeSubmit(context.courseCreator)) {\r\n            POST(\"/educational/createCourse\", {\r\n              ...context.courseCreator.data,\r\n              subject: props.location.query.id\r\n            })\r\n              .then(res => {\r\n                notification.success({ message: \"创建成功\", duration: 2 });\r\n                changePop();\r\n                init();\r\n              })\r\n              .catch(e => {\r\n                notification.error({\r\n                  message: \"创建出错\",\r\n                  duration: 2\r\n                });\r\n              });\r\n          }\r\n        }}\r\n      >\r\n        <CourseCreator />\r\n      </Pop>\r\n      <Header\r\n        title=\"课程管理\"\r\n        onBack={() => {\r\n          props.history.goBack();\r\n        }}\r\n        action={{\r\n          name: \"添加课程\",\r\n          handler: () => {\r\n            changePop();\r\n          }\r\n        }}\r\n      />\r\n      <Container>\r\n        <SortTable\r\n          columns={[\r\n            {\r\n              title: \"课程名称\",\r\n              dataIndex: \"name\"\r\n            },\r\n            // {\r\n            //   title: \"人数\",\r\n            //   dataIndex: \"count\"\r\n            // },\r\n            {\r\n              title: \"状态\",\r\n              dataIndex: \"status\",\r\n              filters: [\r\n                { text: \"进行中\", value: \"active\" },\r\n                { text: \"已结束\", value: \"end\" }\r\n              ],\r\n              onFilter: (value, record) => record.status.includes(value)\r\n            },\r\n            {\r\n              title: \"操作\",\r\n              render: (text, record) => {\r\n                return (\r\n                  <span>\r\n                    <Button\r\n                      onClick={() => {\r\n                        console.log(record);\r\n                      }}\r\n                    >\r\n                      编辑\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        props.history.push({\r\n                          pathname: \"/school/student\",\r\n                          query: record\r\n                        });\r\n                      }}\r\n                    >\r\n                      详情\r\n                    </Button>\r\n                  </span>\r\n                );\r\n              }\r\n            }\r\n          ]}\r\n          data={raw}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Row, Button } from \"antd\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport SortTable from \"../../components/SortTable\";\r\nimport Pop from \"../../components/Pop\";\r\nimport { StudentImporter } from \"../../components/Form\";\r\nimport { GET } from \"../../lib/fetch\";\r\n\r\nexport default props => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [raw, setRaw] = useState(undefined);\r\n  const changePop = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.location.query) {\r\n      console.log(\"here\");\r\n      GET(\"/educational/students\", { id: props.location.query.id }).then(\r\n        res => {\r\n          console.log(res);\r\n          setRaw(res.data || []);\r\n        }\r\n      );\r\n    } else {\r\n      props.history.push(\"/educational/subject\");\r\n    }\r\n  }, [props]);\r\n  return (\r\n    <div>\r\n      <Pop\r\n        visible={visible}\r\n        doHide={() => {\r\n          changePop();\r\n        }}\r\n      >\r\n        <StudentImporter />\r\n      </Pop>\r\n      <Header\r\n        title=\"学生管理\"\r\n        action={{\r\n          name: \"添加学生\",\r\n          handler: () => {\r\n            changePop();\r\n          }\r\n        }}\r\n      />\r\n      <Container>\r\n        <Row>\r\n          <SortTable\r\n            data={raw}\r\n            columns={[\r\n              {\r\n                title: \"工号\",\r\n                dataIndex: \"id\"\r\n              },\r\n              {\r\n                title: \"姓名\",\r\n                dataIndex: \"name\"\r\n              },\r\n              {\r\n                title: \"操作\",\r\n                render: (text, record) => (\r\n                  <span>\r\n                    <Button\r\n                      href=\"#\"\r\n                      onClick={() => {\r\n                        console.log(record);\r\n                      }}\r\n                    >\r\n                      重置密码\r\n                    </Button>\r\n                  </span>\r\n                )\r\n              }\r\n            ]}\r\n            actions={[\r\n              {\r\n                title: \"提交\",\r\n                handler: selected => {\r\n                  console.log(selected);\r\n                }\r\n              }\r\n            ]}\r\n          />\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport SortTable from \"../../components/SortTable\";\r\nimport DataShower from \"../../components/DataShower\";\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <Header\r\n        title=\"考试详情\"\r\n        onBack={() => {\r\n          props.history.goBack();\r\n        }}\r\n      />\r\n      <Container>\r\n        <DataShower\r\n          data={[\r\n            {\r\n              title: \"平均分\",\r\n              value: 61\r\n            },\r\n            {\r\n              title: \"最高分\",\r\n              value: 99\r\n            },\r\n            {\r\n              title: \"及格人数\",\r\n              value: 30\r\n            }\r\n          ]}\r\n        />\r\n        <SortTable\r\n          columns={[\r\n            {\r\n              title: \"姓名\",\r\n              dataIndex: \"name\"\r\n            },\r\n            {\r\n              title: \"学号\",\r\n              dataIndex: \"id\"\r\n            },\r\n            {\r\n              title: \"分数\",\r\n              dataIndex: \"grade\"\r\n            }\r\n          ]}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport beforeSubmit from \"../../lib/beforeSubmit\";\r\nimport Context from \"../../context\";\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport SortTable from \"../../components/SortTable\";\r\nimport { Button, notification } from \"antd\";\r\nimport Pop from \"../../components/Pop\";\r\nimport { ChapterCreator } from \"../../components/Form\";\r\nimport { GET, POST } from \"../../lib/fetch\";\r\nexport default props => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [raw, setRaw] = useState(undefined);\r\n\r\n  const context = useContext(Context);\r\n\r\n  const changePop = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const init = () => {\r\n    GET(\"/educational/chapters\", { id: props.location.query.id }).then(res => {\r\n      console.log(res);\r\n      setRaw(res.data || []);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (props.location.query && context.userInfo) {\r\n      init();\r\n    } else {\r\n      props.history.push(\"/educational/subject\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Pop\r\n        visible={visible}\r\n        handleOk={() => {\r\n          console.log(props.location.query, context.chapterCreator);\r\n          if (beforeSubmit(context.chapterCreator)) {\r\n            POST(\"/educational/createChapter\", {\r\n              ...context.chapterCreator.data,\r\n              subject: props.location.query.id\r\n            })\r\n              .then(res => {\r\n                notification.success({ message: \"创建成功\", duration: 2 });\r\n                changePop();\r\n                init();\r\n              })\r\n              .catch(e => {\r\n                notification.error({\r\n                  message: \"创建出错\",\r\n                  duration: 2\r\n                });\r\n              });\r\n          }\r\n        }}\r\n        doHide={() => {\r\n          changePop();\r\n        }}\r\n      >\r\n        <ChapterCreator />\r\n      </Pop>\r\n      <Header\r\n        title=\"章节管理\"\r\n        onBack={() => {\r\n          props.history.goBack();\r\n        }}\r\n        action={{\r\n          name: \"添加章节\",\r\n          handler: () => {\r\n            changePop();\r\n          }\r\n        }}\r\n      />\r\n      <Container>\r\n        <SortTable\r\n          data={raw}\r\n          columns={[\r\n            {\r\n              title: \"章节名称\",\r\n              dataIndex: \"name\"\r\n            },\r\n            {\r\n              title: \"操作\",\r\n              render: (text, record) => {\r\n                return (\r\n                  <span>\r\n                    <Button\r\n                      onClick={() => {\r\n                        props.history.push({\r\n                          pathname: \"/educational/question\",\r\n                          query: record\r\n                        });\r\n                        // console.log(record);\r\n                      }}\r\n                    >\r\n                      查看详情\r\n                    </Button>\r\n                  </span>\r\n                );\r\n              }\r\n            }\r\n          ]}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport beforeSubmit from \"../../lib/beforeSubmit\";\r\nimport Context from \"../../context\";\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport SortTable from \"../../components/SortTable\";\r\nimport { Divider, Button, notification } from \"antd\";\r\nimport Pop from \"../../components/Pop\";\r\nimport { QuestionImporter } from \"../../components/Form\";\r\nimport { GET, POST } from \"../../lib/fetch\";\r\n\r\nexport default props => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [raw, setRaw] = useState(undefined);\r\n\r\n  const context = useContext(Context);\r\n\r\n  const changePop = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const init = () => {\r\n    GET(\"/educational/questions\", { id: props.location.query.id }).then(res => {\r\n      console.log(res);\r\n      setRaw(res.data || []);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.location.query && context.userInfo) {\r\n      init();\r\n    } else {\r\n      props.history.push(\"/educational/subject\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Pop\r\n        visible={visible}\r\n        doHide={() => {\r\n          changePop();\r\n        }}\r\n        handleOk={() => {\r\n          if (beforeSubmit(context.questionImporter)) {\r\n            // #TODO: 这个比较复杂，先不动\r\n            POST(\"/educational/createCourse\", {\r\n              ...context.questionImporter.data,\r\n              chapter: props.location.query.id\r\n            })\r\n              .then(res => {\r\n                notification.success({ message: \"创建成功\", duration: 2 });\r\n                changePop();\r\n                init();\r\n              })\r\n              .catch(e => {\r\n                notification.error({\r\n                  message: \"创建出错\",\r\n                  duration: 2\r\n                });\r\n              });\r\n          }\r\n        }}\r\n      >\r\n        <QuestionImporter />\r\n      </Pop>\r\n      <Header\r\n        title=\"题目管理\"\r\n        onBack={() => {\r\n          props.history.goBack();\r\n        }}\r\n        action={{\r\n          name: \"添加题目\",\r\n          handler: () => {\r\n            changePop();\r\n          }\r\n        }}\r\n      />\r\n      <Container>\r\n        <SortTable\r\n          columns={[\r\n            {\r\n              title: \"题干\",\r\n              dataIndex: \"title\"\r\n            },\r\n            {\r\n              title: \"类型\",\r\n              render: (text, record) => {\r\n                let value = \"\";\r\n                switch (record.type) {\r\n                  case \"single\":\r\n                    return \"单选题\";\r\n                  case \"multi\":\r\n                    return \"多选题\";\r\n                  case \"trueFalse\":\r\n                    return \"判断题\";\r\n                }\r\n              },\r\n              dataIndex: \"type\",\r\n              filters: [\r\n                { text: \"单选题\", value: \"single\" },\r\n                { text: \"多选题\", value: \"multi\" },\r\n                { text: \"判断题\", value: \"trueFalse\" }\r\n              ],\r\n              // filteredValue: filteredInfo.address || null,\r\n              onFilter: (value, record) => record.type === value\r\n            },\r\n            {\r\n              title: \"操作\",\r\n              render: (text, record) => {\r\n                return (\r\n                  <span>\r\n                    <Button\r\n                      onClick={() => {\r\n                        console.log(record);\r\n                      }}\r\n                    >\r\n                      编辑\r\n                    </Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button\r\n                      onClick={() => {\r\n                        console.log(record);\r\n                      }}\r\n                    >\r\n                      详情\r\n                    </Button>\r\n                  </span>\r\n                );\r\n              }\r\n            }\r\n          ]}\r\n          actions={[\r\n            {\r\n              title: \"禁用\",\r\n              handler: v => {\r\n                console.log(v);\r\n              }\r\n            }\r\n          ]}\r\n          data={raw}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport beforeSubmit from \"../../lib/beforeSubmit\";\r\nimport Context from \"../../context\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport SortTable from \"../../components/SortTable\";\r\nimport { Divider, Button, notification } from \"antd\";\r\nimport Pop from \"../../components/Pop\";\r\nimport { PaperCreator } from \"../../components/Form\";\r\nimport { GET, POST } from \"../../lib/fetch\";\r\n\r\nexport default props => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [raw, setRaw] = useState(undefined);\r\n\r\n  const context = useContext(Context);\r\n\r\n  const changePop = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const init = () => {\r\n    GET(\"/examination/papers\").then(res => {\r\n      setRaw(res.data || []);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Pop\r\n        visible={visible}\r\n        doHide={() => {\r\n          changePop();\r\n        }}\r\n        handleOk={() => {\r\n          console.log(context.paperCreator);\r\n          if (beforeSubmit(context.paperCreator)) {\r\n            console.log(context.paperCreator);\r\n            POST(\"/examination/createPaper\", {\r\n              ...context.paperCreator.data\r\n            })\r\n              .then(res => {\r\n                notification.success({ message: \"创建成功\", duration: 2 });\r\n                changePop();\r\n                init();\r\n              })\r\n              .catch(e => {\r\n                notification.error({\r\n                  message: \"创建出错\",\r\n                  duration: 2\r\n                });\r\n              });\r\n          }\r\n        }}\r\n      >\r\n        <PaperCreator />\r\n      </Pop>\r\n      <Header\r\n        title=\"试卷管理\"\r\n        onBack={() => {\r\n          props.history.goBack();\r\n        }}\r\n        action={{\r\n          name: \"添加试卷\",\r\n          handler: () => {\r\n            changePop();\r\n          }\r\n        }}\r\n      />\r\n      <Container>\r\n        <SortTable\r\n          columns={[\r\n            {\r\n              title: \"名称\",\r\n              dataIndex: \"name\"\r\n            },\r\n            {\r\n              title: \"类型\",\r\n              render: (text, record) => (record.type ? \"大考\" : \"小练习\")\r\n            },\r\n            {\r\n              title: \"单选题数\",\r\n              dataIndex: \"totalSingle\"\r\n            },\r\n            {\r\n              title: \"多选题数\",\r\n              dataIndex: \"totalMulti\"\r\n            },\r\n            {\r\n              title: \"判断题数\",\r\n              dataIndex: \"totalTrueFalse\"\r\n            },\r\n            {\r\n              title: \"操作\",\r\n              render: (text, record) => {\r\n                return (\r\n                  <span>\r\n                    <Button\r\n                      onClick={() => {\r\n                        console.log(record);\r\n                      }}\r\n                    >\r\n                      编辑\r\n                    </Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button\r\n                      onClick={() => {\r\n                        console.log(record);\r\n                      }}\r\n                    >\r\n                      详情\r\n                    </Button>\r\n                  </span>\r\n                );\r\n              }\r\n            }\r\n          ]}\r\n          actions={[\r\n            {\r\n              title: \"禁用\",\r\n              handler: v => {\r\n                console.log(v);\r\n              }\r\n            }\r\n          ]}\r\n          data={raw}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport beforeSubmit from \"../../lib/beforeSubmit\";\r\nimport Context from \"../../context\";\r\n\r\nimport { Row } from \"antd\";\r\n\r\nimport { CollegeCard } from \"../../components/Card\";\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport Pop from \"../../components/Pop\";\r\nimport { CollegeCreator } from \"../../components/Form\";\r\nimport { GET, POST } from \"../../lib/fetch\";\r\nimport { notification } from \"antd\";\r\n\r\nexport default props => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [raw, setRaw] = useState([]);\r\n  const changePop = () => {\r\n    setVisible(!visible);\r\n  };\r\n  const context = useContext(Context);\r\n\r\n  const init = () => {\r\n    GET(\"/school/colleges\", { id: 1 }).then(res => {\r\n      console.log(res);\r\n      setRaw(res.data || []);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (context.userInfo) {\r\n      init();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Pop\r\n        visible={visible}\r\n        doHide={() => {\r\n          changePop();\r\n        }}\r\n        handleOk={() => {\r\n          // console.log(context.subjectCreator);\r\n          if (beforeSubmit(context.collegeCreator)) {\r\n            POST(\"/school/createCollege\", context.collegeCreator.data)\r\n              .then(res => {\r\n                notification.success({ message: \"创建成功\", duration: 2 });\r\n                changePop();\r\n                init();\r\n              })\r\n              .catch(e => {\r\n                notification.error({\r\n                  message: \"创建出错\",\r\n                  duration: 2\r\n                });\r\n              });\r\n          }\r\n        }}\r\n      >\r\n        <CollegeCreator />\r\n      </Pop>\r\n      <Header\r\n        title=\"学院一览\"\r\n        action={{\r\n          name: \"添加学院\",\r\n          handler: () => {\r\n            changePop();\r\n          }\r\n        }}\r\n      />\r\n      <Container>\r\n        <Row>\r\n          {raw.map(college => (\r\n            <CollegeCard\r\n              key={college.id}\r\n              id={college.id}\r\n              collegeName={college.name}\r\n              majorNum={college.majorNum}\r\n              classNum={college.classNum}\r\n              handler={item => {\r\n                props.history.push({\r\n                  pathname: \"/school/major\",\r\n                  query: item\r\n                });\r\n              }}\r\n            />\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport beforeSubmit from \"../../lib/beforeSubmit\";\r\nimport Context from \"../../context\";\r\n\r\nimport { Row, notification } from \"antd\";\r\n\r\nimport { MajorCard } from \"../../components/Card\";\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport Pop from \"../../components/Pop\";\r\nimport { MajorCreator } from \"../../components/Form\";\r\nimport { GET, POST } from \"../../lib/fetch\";\r\n\r\nexport default props => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [raw, setRaw] = useState([]);\r\n\r\n  const context = useContext(Context);\r\n  const changePop = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const init = () => {\r\n    console.log(props.location.query);\r\n    GET(\"/school/majors\", { id: props.location.query.id }).then(res => {\r\n      console.log(res);\r\n      setRaw(res.data || []);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.location.query && context.userInfo) {\r\n      init();\r\n    } else {\r\n      props.history.push(\"/school/college\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Pop\r\n        visible={visible}\r\n        doHide={() => {\r\n          changePop();\r\n        }}\r\n        handleOk={() => {\r\n          if (beforeSubmit(context.majorCreator)) {\r\n            POST(\"/school/createMajor\", {\r\n              ...context.majorCreator.data,\r\n              college: props.location.query.id\r\n            })\r\n              .then(res => {\r\n                notification.success({ message: \"创建成功\", duration: 2 });\r\n                changePop();\r\n                init();\r\n              })\r\n              .catch(e => {\r\n                notification.error({\r\n                  message: \"创建出错\",\r\n                  duration: 2\r\n                });\r\n              });\r\n          }\r\n        }}\r\n      >\r\n        <MajorCreator />\r\n      </Pop>\r\n      <Header\r\n        title=\"专业一览\"\r\n        onBack={() => {\r\n          props.history.goBack();\r\n        }}\r\n        action={{\r\n          name: \"添加专业\",\r\n          handler: () => {\r\n            changePop();\r\n          }\r\n        }}\r\n      />\r\n      <Container>\r\n        <Row>\r\n          {raw.map(major => (\r\n            <MajorCard\r\n              key={major.id}\r\n              id={major.id}\r\n              majorName={major.name}\r\n              classNum={major.classNum}\r\n              handler={item => {\r\n                props.history.push({\r\n                  pathname: \"/school/class\",\r\n                  query: item\r\n                });\r\n              }}\r\n            />\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport beforeSubmit from \"../../lib/beforeSubmit\";\r\nimport Context from \"../../context\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport SortTable from \"../../components/SortTable\";\r\nimport { Divider, Button, notification } from \"antd\";\r\nimport Pop from \"../../components/Pop\";\r\nimport { ClassCreator } from \"../../components/Form\";\r\nimport { GET, POST } from \"../../lib/fetch\";\r\n\r\nexport default props => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [raw, setRaw] = useState(undefined);\r\n  const context = useContext(Context);\r\n  const changePop = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const init = () => {\r\n    GET(\"/school/classes\", { id: props.location.query.id }).then(res => {\r\n      console.log(res);\r\n      setRaw(res.data || []);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.location.query && context.userInfo) {\r\n      init();\r\n    } else {\r\n      props.history.push(\"/school/college\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Pop\r\n        visible={visible}\r\n        doHide={() => {\r\n          changePop();\r\n        }}\r\n        handleOk={() => {\r\n          if (beforeSubmit(context.classCreator)) {\r\n            POST(\"/school/createClass\", {\r\n              ...context.classCreator.data,\r\n              major: props.location.query.id\r\n            })\r\n              .then(res => {\r\n                notification.success({ message: \"创建成功\", duration: 2 });\r\n                changePop();\r\n                init();\r\n              })\r\n              .catch(e => {\r\n                notification.error({\r\n                  message: \"创建出错\",\r\n                  duration: 2\r\n                });\r\n              });\r\n          }\r\n        }}\r\n      >\r\n        <ClassCreator />\r\n      </Pop>\r\n      <Header\r\n        title=\"班级管理\"\r\n        onBack={() => {\r\n          props.history.goBack();\r\n        }}\r\n        action={{\r\n          name: \"添加班级\",\r\n          handler: () => {\r\n            changePop();\r\n          }\r\n        }}\r\n      />\r\n      <Container>\r\n        <SortTable\r\n          data={raw}\r\n          columns={[\r\n            {\r\n              title: \"班级名称\",\r\n              dataIndex: \"name\"\r\n            },\r\n            {\r\n              title: \"人数\",\r\n              dataIndex: \"count\"\r\n            },\r\n            {\r\n              title: \"操作\",\r\n              render: (text, record) => {\r\n                return (\r\n                  <span>\r\n                    <Button\r\n                      onClick={() => {\r\n                        console.log(record);\r\n                      }}\r\n                    >\r\n                      编辑\r\n                    </Button>\r\n                    <Divider type=\"vertical\" />\r\n                    <Button\r\n                      onClick={() => {\r\n                        props.history.push({\r\n                          pathname: \"/school/student\",\r\n                          query: record\r\n                        });\r\n                      }}\r\n                    >\r\n                      详情\r\n                    </Button>\r\n                  </span>\r\n                );\r\n              }\r\n            }\r\n          ]}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Row, Button } from \"antd\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport Container from \"../../components/Container\";\r\nimport SortTable from \"../../components/SortTable\";\r\nimport Pop from \"../../components/Pop\";\r\nimport { StudentImporter } from \"../../components/Form\";\r\nimport { GET } from \"../../lib/fetch\";\r\n\r\nexport default props => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [raw, setRaw] = useState(undefined);\r\n  const changePop = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const init = () => {\r\n    GET(\"/school/students\", { id: props.location.query.id }).then(res => {\r\n      console.log(res);\r\n      setRaw(res.data || []);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.location.query) {\r\n      console.log(\"here\");\r\n      init();\r\n    } else {\r\n      props.history.push(\"/school/college\");\r\n    }\r\n  }, [props]);\r\n  return (\r\n    <div>\r\n      <Pop\r\n        visible={visible}\r\n        doHide={() => {\r\n          changePop();\r\n        }}\r\n      >\r\n        <StudentImporter />\r\n      </Pop>\r\n      <Header\r\n        title=\"学生管理\"\r\n        action={{\r\n          name: \"添加学生\",\r\n          handler: () => {\r\n            changePop();\r\n          }\r\n        }}\r\n      />\r\n      <Container>\r\n        <Row>\r\n          <SortTable\r\n            data={raw}\r\n            columns={[\r\n              {\r\n                title: \"学号\",\r\n                dataIndex: \"id\"\r\n              },\r\n              {\r\n                title: \"姓名\",\r\n                dataIndex: \"name\"\r\n              },\r\n              {\r\n                title: \"操作\",\r\n                render: (text, record) => (\r\n                  <span>\r\n                    <Button\r\n                      href=\"#\"\r\n                      onClick={() => {\r\n                        console.log(record);\r\n                      }}\r\n                    >\r\n                      重置密码\r\n                    </Button>\r\n                  </span>\r\n                )\r\n              }\r\n            ]}\r\n            actions={[\r\n              {\r\n                title: \"提交\",\r\n                handler: selected => {\r\n                  console.log(selected);\r\n                }\r\n              }\r\n            ]}\r\n          />\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport config from \"./config\";\r\n\r\nconst renderRoutes = routesConfig => {\r\n  return routesConfig.map(route => {\r\n    if (!route.routes) {\r\n      return <Route {...route} key={route.path} />;\r\n    } else {\r\n      const subRoutes = renderRoutes(route.routes);\r\n\r\n      return [...subRoutes];\r\n    }\r\n  });\r\n};\r\n\r\nexport default () => <Switch>{renderRoutes(config)}</Switch>;\r\n","import React, { useEffect, useState, useContext } from \"react\";\nimport \"./App.less\";\n\nimport Context from \"./context\";\n\nimport { Layout, Menu, Icon, notification } from \"antd\";\n\nimport RouterView from \"./router\";\nimport routeConfig from \"./router/config\";\n\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { Login } from \"./components/Form\";\nimport Pop from \"./components/Pop\";\n\nimport { POST } from \"./lib/fetch\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport default props => {\n  // const { loginform, userInfo, setUserInfo } = useContext(Context);\n  const context = useContext(Context);\n  const { loginform, userInfo, setUserInfo } = context;\n  const [collapsed, setCollapsed] = useState(false);\n  const [logined, setLogined] = useState(true);\n  const [active, setActive] = useState(window.location.pathname);\n  const [history] = useState(useHistory());\n  useEffect(() => {\n    window.addEventListener(\"login\", () => {\n      setLogined(false);\n    });\n\n    POST(\"/user/info\")\n      .then(res => {\n        if ((res.success || false) === false) {\n          window.dispatchEvent(new Event(\"login\"));\n        } else {\n          setUserInfo(res.data);\n        }\n      })\n      .catch(e => {\n        notification.error({\n          message: `获取用户信息失败` + JSON.stringify(e),\n          duration: 2\n        });\n        window.dispatchEvent(new Event(\"login\"));\n      });\n  }, []);\n\n  const onCollapse = collapsed => {\n    setCollapsed(collapsed);\n  };\n\n  const login = async () => {\n    try {\n      const { success = false, data = {} } = await POST(\"/user/login\", {\n        uuid: loginform.data.id,\n        password: loginform.data.password\n      });\n\n      if (success) {\n        setUserInfo(data);\n        notification.success({\n          message: \"登录成功\",\n          duration: 2\n        });\n        setLogined(true);\n      } else {\n        notification.error({\n          message: \"登录失败\",\n          description: \"请检查用户名和密码\",\n          duration: 2\n        });\n      }\n    } catch (e) {\n      notification.success({\n        message: JSON.stringify(e),\n        duration: 2\n      });\n    }\n  };\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Pop\n        visible={!logined || false}\n        doHide={() => console.log(\"try hide\")}\n        handleOk={() => login()}\n      >\n        <Login />\n      </Pop>\n      <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n        <div\n          className=\"logo\"\n          onClick={() => {\n            history.push({\n              pathname: \"/\",\n              query: userInfo\n            });\n          }}\n        />\n\n        <Menu\n          theme=\"dark\"\n          defaultOpenKeys={[\"test\", \"/school\", \"/examination\", \"/educational\"]}\n          defaultSelectedKeys={[active]}\n          mode=\"inline\"\n        >\n          {routeConfig.map(route => {\n            if (!route.routes) {\n              return (\n                route.display === true && (\n                  <Menu.Item key={route.path}>\n                    <Link to={route.path}>\n                      {route.icon && <Icon type={route.icon} />}\n                      <span>{route.name}</span>\n                    </Link>\n                  </Menu.Item>\n                )\n              );\n            } else {\n              return (\n                <SubMenu\n                  key={route.path}\n                  title={\n                    <span>\n                      {route.icon && <Icon type={route.icon} />}\n                      <span>{route.name}</span>\n                    </span>\n                  }\n                >\n                  {route.routes.map(subRoutes => {\n                    return (\n                      subRoutes.display === true && (\n                        <Menu.Item key={subRoutes.path}>\n                          <Link to={subRoutes.path}>{subRoutes.name}</Link>\n                        </Menu.Item>\n                      )\n                    );\n                  })}\n                </SubMenu>\n              );\n            }\n          })}\n        </Menu>\n      </Sider>\n      <Layout\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\"\n        }}\n      >\n        <Header\n          style={{\n            flex: 0,\n            background: \"var(--background-color)\",\n            padding: 0,\n            color: \"var(--font-color)\",\n            display: \"flex\",\n            flexDirection: \"row-reverse\"\n          }}\n        >\n          <div\n            style={{\n              position: \"relative\",\n              right: \"16px\"\n            }}\n          >\n            {userInfo.name || \"\"}\n          </div>\n        </Header>\n        <Content style={{ margin: \"24px 16px 0\", flex: 1 }}>\n          <div\n            style={{\n              padding: 24,\n              background: \"var(--background-color-top)\",\n              height: \"100%\"\n            }}\n          >\n            <RouterView />\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\", flex: 0 }}>\n          Marx - 树人大学考试系统\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n};\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"antd/dist/antd.less\";\n\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nimport Context from \"./context\";\n\nconst Component = () => {\n  const [loginform, update_loginform] = useState({});\n  const [userInfo, setUserInfo] = useState([]);\n  const [login, update_login] = useState([]);\n  const [collegeCreator, update_collegeCreator] = useState([]);\n  const [chapterCreator, update_chapterCreator] = useState([]);\n  const [classCreator, update_classCreator] = useState([]);\n  const [courseCreator, update_courseCreator] = useState([]);\n  const [examCreator, update_examCreator] = useState([]);\n  const [majorCreator, update_majorCreator] = useState([]);\n  const [paperCreator, update_paperCreator] = useState([]);\n  const [studentAdder, update_studentAdder] = useState([]);\n  const [studentImporter, update_studentImporter] = useState([]);\n  const [subjectCreator, update_subjectCreator] = useState([]);\n  const [teacherCreator, update_teacherCreator] = useState([]);\n  const [questionImporter, update_questionImporter] = useState([]);\n\n  return (\n    <Context.Provider\n      value={{\n        loginform,\n        update_loginform,\n        userInfo,\n        setUserInfo,\n        collegeCreator,\n        update_collegeCreator,\n        chapterCreator,\n        update_chapterCreator,\n        classCreator,\n        update_classCreator,\n        courseCreator,\n        update_courseCreator,\n        examCreator,\n        update_examCreator,\n        majorCreator,\n        update_majorCreator,\n        paperCreator,\n        update_paperCreator,\n        studentAdder,\n        update_studentAdder,\n        studentImporter,\n        update_studentImporter,\n        subjectCreator,\n        update_subjectCreator,\n        teacherCreator,\n        update_teacherCreator,\n        questionImporter,\n        update_questionImporter\n      }}\n    >\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Context.Provider>\n  );\n};\n\nReactDOM.render(<Component />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}